#!/bin/bash -x
# script to create either 
# 1) a Debian binary package directly from the compiled BALL sources OR
# 2) to create a Debian binary package while creating a source package
# if the second: $1 == source

export BALL_PATH=`pwd | sed "s/debian$//g" | sed "s/debian-upstream$//g"`
export BALL_INSTALL_PATH=${BALL_PATH}/debian/ball/usr

VERSION="1.2"

if [ $# == 0 ] || [ $1 != "source" ]
then
	rm -rf debian 2>/dev/null
	cp -r debian-upstream debian
fi
	cd $BALL_PATH/debian 								 																&&
	mkdir -p libball-${VERSION}/usr/lib						  										&&
	mkdir -p libball-${VERSION}/usr/share/BALL		  										&&
	mkdir -p libball-${VERSION}/usr/share/BALL/doc  										&&
	mkdir -p libball-${VERSION}-dev/usr/include     										&&
	mkdir -p libball-${VERSION}-dev/usr/lib		   	  										&&
	mkdir -p libball-${VERSION}-doc/usr/share/doc/libball-1.2/html			&&
	mkdir -p ballview-${VERSION}/usr/bin 					  										&&
	mkdir -p ballview-${VERSION}/usr/share/man/man1											&&
	mkdir -p ballview-${VERSION}/usr/share/doc/ballview-${VERSION}/html	&&
	mkdir -p python-ball-${VERSION}/usr/share/BALL  										&&
	mkdir -p python-ball-${VERSION}/usr/lib/python2.5/site-packages
#fi

cd $BALL_PATH/debian

# remember the targets of the ldconfig symbolic links
LIBBALL_TARGET=$(ls -l ${BALL_INSTALL_PATH}/lib/libBALL.so)
LIBBALL_TARGET=${LIBBALL_TARGET#*-> }
LIBBALL_TARGET=$(basename ${LIBBALL_TARGET})

LIBVIEW_TARGET=$(ls -l ${BALL_INSTALL_PATH}/lib/libVIEW.so)
LIBVIEW_TARGET=${LIBVIEW_TARGET#*-> }
LIBVIEW_TARGET=$(basename ${LIBVIEW_TARGET})

# get rid of the symbolic links before we copy anything
rm    ${BALL_INSTALL_PATH}/lib/libBALL.so																						&&
rm    ${BALL_INSTALL_PATH}/lib/libVIEW.so																						&&
cp    ${BALL_INSTALL_PATH}/lib/libBALL*      libball-${VERSION}/usr/lib/						&&
cp    ${BALL_INSTALL_PATH}/lib/libVIEW*      libball-${VERSION}/usr/lib/						&&
cp -r ${BALL_INSTALL_PATH}/share/BALL/data   libball-${VERSION}/usr/share/BALL   	  &&
cp -r ${BALL_INSTALL_PATH}/include/BALL      libball-${VERSION}-dev/usr/include     &&
ln -s ${BALL_INSTALL_PATH}/lib/${LIBBALL_TARGET} libball-${VERSION}-dev/usr/lib/libBALL.so &&
ln -s ${BALL_INSTALL_PATH}/lib/${LIBVIEW_TARGET} libball-${VERSION}-dev/usr/lib/libVIEW.so &&
cp    ${BALL_PATH}/source/APPLICATIONS/BALLVIEW/BALLView ballview-${VERSION}/usr/bin/			 &&

mv libball-${VERSION}/usr/lib/libBALL.la  libball-${VERSION}-dev/usr/lib &&
mv libball-${VERSION}/usr/lib/libVIEW.la  libball-${VERSION}-dev/usr/lib &&

# uncomment the following two lines if you want static libs in your debian package
#mv libball-${VERSION}/usr/lib/libBALL.a   libball-${VERSION}-dev/usr/lib &&
#mv libball-${VERSION}/usr/lib/libVIEW.a   libball-${VERSION}-dev/usr/lib &&

#cp    ../debian-install/ball/bin/BALLView    ballview/usr/bin/
#cp -r ../source/APPLICATIONS/BALLVIEW/BALLView $PNAME/usr/lib/BALL 				&&
#cp    ../source/APPLICATIONS/BALLVIEW/BALLView $PNAME/usr/bin/						&&

# copy the documentation
cp -r ${BALL_PATH}/doc/BALLView/*							ballview-${VERSION}/usr/share/doc/ballview-${VERSION}/html	&&
cp    ${BALL_PATH}/doc/TUTORIAL/tutorial.pdf 	libball-${VERSION}-doc/usr/share/doc/libball-1.2/						&&
cp -r ${BALL_PATH}/doc/classes 								libball-${VERSION}/usr/share/BALL/doc												&&
cp -r ${BALL_PATH}/doc/internal 							libball-${VERSION}/usr/share/BALL/doc												&&
cp -r ${BALL_PATH}/doc/BALL 									libball-${VERSION}-doc/usr/share/doc/libball-1.2/html				&&

cp ${BALL_PATH}/debian-upstream/ballview.1 ballview-${VERSION}/usr/share/man/man1/ 							&&
cp ${BALL_PATH}/debian-upstream/ballview.1 ballview-${VERSION}/usr/share/man/man1/BALLView.1 		&&
gzip -9 ballview-${VERSION}/usr/share/man/man1/ballview.1 																			&&
gzip -9 ballview-${VERSION}/usr/share/man/man1/BALLView.1 																			&&

cp -r ${BALL_PATH}/source/EXAMPLES/PYTHON python-ball-${VERSION}/usr/share/BALL &&
cp ${BALL_INSTALL_PATH}/lib/BALLmodule.so python-ball-${VERSION}/usr/lib/python2.5/site-packages &&

chmod ugo-x libball-${VERSION}/usr/share/BALL/data/QSAR/* 					&&
chmod ugo-x libball-${VERSION}/usr/share/BALL/data/CHARMM/charmm* 	&&
chmod ugo-x libball-${VERSION}/usr/share/BALL/data/graphics/* 			&&
chmod ugo-x libball-${VERSION}/usr/share/BALL/data/structures/* 		&&
chmod 755   libball-${VERSION}/usr/share/BALL/data/structures/DB/ 	&&
chmod ugo+x ballview-${VERSION}/usr/bin/BALLView 									  &&
chmod ugo-x python-ball-${VERSION}/usr/share/BALL/PYTHON/*.py 			&&

strip --strip-unneeded libball-${VERSION}/usr/lib/*.so &&
strip --strip-unneeded ballview-${VERSION}/usr/bin/*   &&
strip --strip-unneeded python-ball-${VERSION}/usr/lib/python2.5/site-packages/*.so

if [ $# == 1 ] && [ $1 == "source" ]
then
	echo ready for packaging...
#else
#	mkdir $PNAME/DEBIAN 							&&
#	cp * $PNAME/DEBIAN 2>/dev/null    
#	chmod -R 0755 $PNAME/DEBIAN 			&&
#	dpkg -b $PNAME BALLView.deb 			&&
#	rm -rf $PNAME 										&&
#	mv BALLView.deb ~
fi

