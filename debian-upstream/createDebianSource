#!/bin/bash 
# script to create a Debian source package from a BALL git tree
# arguments: $1 == BALL git branch
if test $# != 1 ; then
	echo "createDebianSource <git tag>"
	exit
fi

#create tgz
BALL_PATH=$(pwd)

# find out if we are in the right directory
if test ! -d source -o ! -d data -o ! -d include -o ! -d doc -o ! -d debian-upstream ; then
	echo "Please call this script in the root of a BALL-checkout (the directory containing source, data, include, ...)!"
	exit
fi

echo Using BALL_PATH: $BALL_PATH
echo "Creating git checkout..."
KEEP_DIRS="data debian-upstream doc include README source"

# get name of the BALL tgz
BFILE=$(source/config/makedistribution $1 ${KEEP_DIRS} | tr -d "\n"  | sed "s/^.* \([^ ]*\)$/\1/g")

# does it look like a filename?
if test x$(echo $(basename ${BFILE}) | grep ball-.*.tar.gz) == x"" ; then
	echo "Error: makedistribution seems to have aborted! Are you sure that $1 is something we can check out?"
	exit 1
fi

# extract the version from the tgz
VERSION=$(basename ${BFILE} .tar.gz | sed "s_ball-__")
echo $BFILE", version "${VERSION}

# we need to manipulate some of the files in the distribution => extract our new and shiny tgz again...

# rename the tgz
ORIG_FILE=$(basename ${BFILE} .tar.gz).orig.tar.gz
mv ${BALL_PATH}/${BFILE} ${BALL_PATH}/${ORIG_FILE}

# create working directory
tempdir=$(mktemp -d)
cd ${tempdir}

# extract content of tgz into working directory
echo "Extracting tgz..."
tar xzf ${BALL_PATH}/${ORIG_FILE} > /dev/null
BDIR=`find . -maxdepth 1 -type d | grep ball | grep -v dist`
mv ${BDIR} ball-${VERSION}

# create a new orig.tar.gz with the updated paths
rm ${BALL_PATH}/${ORIG_FILE}
tar czf ${BALL_PATH}/ball-${VERSION}.tar.gz "ball-"${VERSION}

# now create the debianized .tar.gz file
cd "ball-"${VERSION}

# build package
echo "building debian source package..."
dpkg-buildpackage -S -sa -rfakeroot
cd ..
rm -rf "ball-"${VERSION}
mv * ${BALL_PATH}
cd ${BALL_PATH}
rm -rf ${tempdir}
echo "Done! Now use, e.g., pbuilder to build binary packages."
