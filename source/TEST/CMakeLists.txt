### Build rules for BALL's class tests
PROJECT("BALL_tests")

ENABLE_TESTING()

OPTION(BALL_TEST_VERBOSE "Use verbose output for the tests" ON)

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/TEST)
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})

## For now, disable optimization for the tests
IF (CMAKE_COMPILER_IS_INTELCXX OR CMAKE_COMPILER_IS_GNUCXX)
	SET(CMAKE_CXX_FLAGS_RELEASE_SAVED ${CMAKE_CXX_FLAGS_RELEASE})
	SET(CMAKE_CXX_FLAGS_RELEASE "-O0")
ENDIF()

INCLUDE(cmake/BALLTestExecutables.cmake)
INCLUDE(cmake/VIEWTestExecutables.cmake)

## BASIC
ADD_CUSTOM_TARGET(BASIC_TEST)
ADD_DEPENDENCIES(BASIC_TEST ${BALL_BASIC_TESTS})

## MATHS
ADD_CUSTOM_TARGET(MATHS_TEST)
ADD_DEPENDENCIES(MATHS_TEST ${BALL_MATHS_TESTS})

## SYSTEM
ADD_CUSTOM_TARGET(SYSTEM_TEST)
ADD_DEPENDENCIES(SYSTEM_TEST ${BALL_SYSTEM_TESTS})

## TODO: all of them...

## Restore build flags
IF (CMAKE_COMPILER_IS_INTELCXX OR CMAKE_COMPILER_IS_GNUCXX)
	SET(${CMAKE_CXX_FLAGS_RELEASE} ${CMAKE_CXX_FLAGS_RELEASE_SAVED})
ENDIF()


# Now, add all tests as targets
SET(ALL_TESTS "")
FOREACH(group ${BALL_TESTS})
	FOREACH(test ${${group}})
		ADD_EXECUTABLE(${test} ${test}.C)
		TARGET_LINK_LIBRARIES(${test} BALL)
		SET_PROPERTY(TARGET ${test} PROPERTY FOLDER ${group})
		IF (NOT BALL_TEST_VERBOSE)
			ADD_TEST(${test} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${test})
		ELSE()
			ADD_TEST(${test} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${test} "-v")
		ENDIF()
		LIST(APPEND ALL_TESTS ${test})
	ENDFOREACH()
ENDFOREACH()

IF (BALL_HAS_VIEW)
	FOREACH(t ${VIEW_TESTS})
		ADD_EXECUTABLE(${t} ${t}.C)
		TARGET_LINK_LIBRARIES(${t} BALL VIEW)
		SET_PROPERTY(TARGET ${t} PROPERTY FOLDER ${group})
		IF (NOT BALL_TEST_VERBOSE)
			ADD_TEST(${t} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${t})
		ELSE()
			ADD_TEST(${t} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${t} "-v")
		ENDIF()
	ENDFOREACH()

	LIST(APPEND ALL_TESTS ${VIEW_TESTS})
ENDIF()

# Create a suitable target
ADD_CUSTOM_TARGET(build_tests)
ADD_DEPENDENCIES(build_tests ${ALL_TESTS})
