
1.1pre3: 03.11.2004

1.1 mostly features changes related to the Python support, some bugfixes and
a large numer of prominent fixes and improvements in BALLView.
Most of these improvements are related to an improved user interface and some
new models and animation possibilities.

Added:
	- FragmentDatabase
    - added fragments for nucleotides
    - fixed some minor details in other fragments
  - Python support: added more classes to the Python SIP interface
	- new application: DCD2PNG to create series of PNG-images from a DCD trajectory file
  - BALLView
  	- Documentation for BALLView in the folder BALL/doc/BALLView  
    - new models for rendering nucleic acids and for visualizing forces
  	- calculation of Ramachandran plots for proteins
		- improved ball&stick model now renders double-, triple- and aromatic bonds
		- ability to create animations, either as on-screen presentations or for movies
		- OpenGL rendering now allows for depth cueing, material paramters may be adjusted
  	- Stereo display using side-by-side mode or shutter glasses
  	- Clipping planes
  	- storing and loading of BALLView project files
  	- support for drag and drop of molecular files
		- possibility to highlight the selected molecular items
  	- new move mode for (partial) structures
  	- Esc key now switches to last used mode in Scene
  	- Python scripting
  		- Hotkey support for starting any (BALL-)Python command from BALLView
	  	- support to quit program from Python interpreter
  		- support for starting Python script from command line
  		- Benchmark scripts for BALLView


Fixed:
  - CygWin support was temporarily broken
  - fixed the Python support to work with an official SIP release (4.1.1)  
  - BALLView
	  - selection in MolecularControl with CTRL and SHIFT modifier
	  - several problems in Cartoon model
	  - creation of models for several selected items
	  - overall cleanup of RegularDataWidgets
  	- export of PNGs could result in strange problems e.g. with empty images
	  - its now possible to create transparent wireframe and dot models
  	- AtomDistanceColorProcessor [???WAS???]
  	- PeptideDialog: deletion of sequence in entry field
  	- increased performance of SnapShot visualisation, especially for large numbers of SnapShots
  	- A click on the "default" button in Preferences now only works on currently selected page
		- multiple loading of the same file will create enumerated names for the Systems
		- it was not possible to reset the by-element coloring scheme to the default values 
		- issue with restoring window geometry on X11
		- MDS dialog: toggling export to trajectory file was broken
		- now show the correct number of bonds added when building bonds for a structure
		- ResidueIndexColorProcessor now no longer considers water residues 
		- visualization of contour surfaces had sometimes incorrect normals
		- several core dumps related to missing mutex locks
		- seg fault in RingPerceptionProcessesor
		- core dump in calculation of contour surfaces

Changed:
  - BALLView
		- improved focus camera on molecular structures
	  - general improvements in the user interface
		- inside of surfaces is now correctly drawn
		- improved the code for the BALLView termination process
		- removed the old Move-Dialog
		- .BALLView config files are now always stored in the users homedir
		- changed Coloring or Model settings are now visible after pressing apply
		- disabled Server in BALLView by default
		- cleanup for storing of settings from dialogs
	- ~ModularWidget now calls MainControl::removeModularWidget, so
		from ModularWidget derived classes no longer have to deregister themselves


1.0: 24.05.2004

Changed:
  - molview has been renamed to BALLView in order to avoid
    confusion (there are other applications out there with the name molview)
  - default constructor of FragmentDB does no longer open the default
    fragment database. If you want the same behavior as before, simply
    call FragmentDB::init() or use the other constructor with an empty
    string as an argument (e.g. 'FragmentDB db("");').

Added + improved:
  - MOLFile and SDFile are now more robust with respect to slight errors in the
    files
  - Documentation has been added and improved in numerous places
  - Dialog to download and open PDB files directly from www.PDB.org
	- Mouse button emulation in Scene for mice with less than three buttons (e.g. Mac):
    use SHIFT, ALT, CTRL together with the mouse button
	- Mousewheel sensitivity can be adjusted
	- Now using Windows native dialogs on Windows platforms
	- Added capablity to BALLView to log to file

Installation:
  - Additional platform: Mac OS X (Panther)
  - Support for G++ 3.4
  - Windows installer for BALLView and BALL
  - Debian and RPM packages for several Linux distributions

1.0pre2: 20.02.2004
-------------------
Added + improved:
  - All new and shiny: we did a major code overhaul of almost all visualization classes
  - Multi-threaded: you can run MD simulations, energy minimizations in the background, models can be computed in the background
  - Separate widgets for managing structures and representations of structures
  - Mousewheel support, customizable mouse sensitivity
  - All widgets are now dockable
  - OpenGL code has been accelerated significantly
  - Surfaces: computation of solvent-accessible and solvent-excluded surfaces has been accelerated
  - Cartoon model for secondary structures has been added
  - Additional coloring modes (secondary structure, occupancy, ...)
  - Image export to PovRay or as PNG
  -	Simplified enabling/disabling of representations
  -	Peptide builder: construct a peptide/protein from its sequence
  -	Simulations are now possible using AMBER or CHARMM force fields
  -	Replay/animate trajectories
  -	All force field options can now be set through the user interface
  -	Cut and copy of molecular structure and parts of these
  -	Selection of kernel objects with boolean expressions
  -	Improved electrostatics calculations with finite-difference Poisson-Boltzmann solver (FDPB) and visualization of electrostatic potentials (coloring, isopotential surfaces)
  -	Loading of molecules from the command line
  -	Calculation and visualisation of H-bonds
  -	DSSP algorithm for secondary structure determination

1.0pre1: 23.12.2002
-------------------
Additional platform:
  - Windows (Microsoft Visual Studio .NET)

Bugs fixed:
  - several bugs in the kernel
  - PDB reader
  - visualization

Added + improved:
  - faster AMBER force field implementation
  - faster kernel data structures
  - molecular surface computation (really fast now)
  - support for QT 3.0
  - surface computations (including transparent surfaces) in MolView
  - export of MolView scenes to PovRay
  - coloring of surfaces w.r.t. grid data (e.g. elctrostatic potential)


1.0b: 17.01.2002
----------------
Bugs fixed:
	- Lots of stuff in Expression, HINFile, PDBFile
  - some bugs in molview
  - FragmentDB::AddHydrogensProcessor was basically reimplemented
	- clean up of the NMR classes
  - AutoDeletable did not work correctly due to a strange problem with
    multiple inheritance 
  - too many to count everywhere else...

Added + improved:
  - first official support for the Python bindings (still experimental, though)
  - QSAR: a trivial framework for the implementation of molecular descriptors
  - File: allows the expansion of filenames to URLs (again)
  - MDL MOL files and SD files
  - SMILES parser (experimental)
  - several chapters in the tutorial
  - Solvent excluded surface should be *much* faster
  - AMBER force field got some speedup for partially selected structures

Known, but not yet fixed:
  - File and TCPTransfer occasionally show strange baehavior
    when retrieving files via the network
  - XDR support does not work under Tru64/cxx -- call configure with "--without-xdr"
  - String_test is really huge -- some compilers choke on it (internal stack overflow,
    cirtual memory exhausted) -- we can't do much about that...


1.0a BF1: 30.07.2001
--------------------
Bugs fixed:
	- genericPDBFile: assigned incorrect element if the element columns did not
    contain a valid element symbol
  - FileSystem: canonizePath expanded ../../ to .., thus leading to problems with
    relative paths for in File and derived classes (PDBFile, HINFile, etc.)
  - APPLICATIONS/PB: Makefile used incorrect linker options correctly on Tru64
  - configure: did not abort if neither gethostname, nor sysinfo were found 
    (see unfixed bug below)
  - FragmentDB::AddHydrogensProcessor caused a core dump for residues where
    only one reference atom was available (e.g. water)

Known, but not fixed:
  - Expression does not evaluate all bracketed expressions correctly
  - configure causes some problems on Tru64 (fails to find gethostname)
    Workaround: in BALL/source type "touch config/configure.in;make configure" 
      and proceed as usual. The problem is probably somehow caused by some 
			incompatibility between certain autoconf versions and some Tru64 header
      header files, but I couldn't nail it down yet...

Added, changed: 
  - ResidueChecker: checks for overlapping atoms and duplicate atom names in a residue
  - Test for FileSystem
  - Python support functional (though still experimental, requires a patched version of SIP-2.5pre4, available
    from the BALL website). Recommended for seasoned Python veterans only.
  - BALL exceptions are know derived from std::exception
  - added fragment for Zinc (ZN.db)
  - The interface of GeneralException was slightly modified to achieve compatibility
    with the Python wrapper classes
  - The interface of RegularData2D::getMinValue/getMaxValue has changed
  - The interface of Object has changed (ever so slightly)
  - Changed the GridIndex typed of RegularData2D and RegularData3D (towards a more consistent IF)
  - The structure of ResidueChecker was modified to make way for a more modular design
    in the future
 
Additional bugs:
  - no unknown bugs have been found
1.0a (bugfix 1): 30.07.2001
---------------------------
Bugs fixed:
	- genericPDBFile: assigned incorrect element if the element columns did not
    contain a valid element symbol
  - FileSystem: canonizePath expanded ../../ to .., thus leading to problems with
    relative paths for in File and derived classes (PDBFile, HINFile, etc.)
  - APPLICATIONS/PB: Makefile used incorrect linker options correctly on Tru64
  - configure: did not abort if neither gethostname, nor sysinfo were found 
    (see unfixed bug below)
  - FragmentDB::AddHydrogensProcessor caused a core dump for residues where
    only one reference atom was available (e.g. water)

Known, but not fixed:
  - Expression does not evaluate all bracketed expressions correctly
  - configure causes some problems on Tru64 (fails to find gethostname)
    Workaround: in BALL/source type "touch config/configure.in;make configure" 
      and proceed as usual. The problem is probably somehow caused by some 
			incompatibility between certain autoconf versions and some Tru64 header
      header files, but I couldn't nail it down yet...

Added, changed: 
  - ResidueChecker: checks for overlapping atoms and duplicate atom names in a residue
  - Test for FileSystem
  - Python support functional (though still experimental, requires a patched version of SIP-2.5pre4, available
    from the BALL website). Recommended for seasoned Python veterans only.
  - BALL exceptions are know derived from std::exception
  - added fragment for Zinc (ZN.db)
  - The interface of GeneralException was slightly modified to achieve compatibility
    with the Python wrapper classes
  - The interface of RegularData2D::getMinValue/getMaxValue has changed
  - The interface of Object has changed (ever so slightly)
  - Changed the GridIndex typed of RegularData2D and RegularData3D (towards a more consistent IF)
  - The structure of ResidueChecker was modified to make way for a more modular design
    in the future
 

1.0a: 19.07.2001
------------------
  Way to many changes to enumerate here....

0.95a: 05.05.2000
-----------------
		New:
			- tutorial (at least a beginning)
			- support for Tru64 Unix with Compaq C++ 6.2, Solaris 8
			- complete rewrite of the energy minimization part
      - switching functions added for CHARMM and AMBER
			- reaction field energy implemented (Poisson-Boltzmann code)
      - new architecture with better modularity for MolVIEW
			- new example application: PB - Finite Difference Poisson-Boltzmann Solver
      - new website 
      - license terms

		Simplified Handling of torsion angles 
		
		Nearly complete tests and documentation for all mathematical classes
		
		Better testing.
		
		Hundreds of pages of documentation added for the Reference Manual.

		Minor improvements here and there.


0.9a: 18.01.2000
		First public alpha release
