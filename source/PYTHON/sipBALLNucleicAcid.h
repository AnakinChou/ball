// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Tue Jun 27 22:43:53 2000

#ifndef _BALLNucleicAcid_H
#define	_BALLNucleicAcid_H

#include "sipBALLMolecule.h"
#include "sipBALLString.h"
#include "sipBALLNucleotide.h"

#line 5 "nucleicAcid.sip"
#include <BALL/KERNEL/molecule.h>
using namespace BALL;
#line 16 "./sipBALLNucleicAcid.h"

extern SIP_EXPORT PyObject *sipClass_NucleicAcid;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_NucleicAcid[];

extern SIP_EXPORT const void *sipCast_NucleicAcid Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_NucleicAcid Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipNucleicAcid : public NucleicAcid
{
public:
	sipNucleicAcid();
	sipNucleicAcid(const NucleicAcid&,bool);
	sipNucleicAcid(const String&,const String&);
	sipNucleicAcid(const NucleicAcid&);
	~sipNucleicAcid();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void select();
	void deselect();
	void clear();
	void destroy();
	bool isValid() const;

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_NucleicAcid Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_NucleicAcid Py_PROTO((PyObject *,NucleicAcid **,int,int *));
extern SIP_EXPORT NucleicAcid *sipForceConvertTo_NucleicAcid Py_PROTO((PyObject *,int *));

#endif
