// C++ wrapper class header file.
//
// Generated by SIP v0.11.1 on Sun Apr 30 20:31:23 2000

#ifndef _BALLMolecule_H
#define	_BALLMolecule_H

#include "sipBALLBaseFragment.h"
#include "sipBALLString.h"
#include "sipBALLSystem.h"
#include "sipBALLAtom.h"
#include "sipBALLComposite.h"

#line 5 "molecule.sip"
#include <BALL/KERNEL/molecule.h>
using namespace BALL;
#line 18 "./sipBALLMolecule.h"

extern SIP_EXPORT PyObject *sipClass_Molecule;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Molecule[];

extern SIP_EXPORT const void *sipCast_Molecule Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_Molecule Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipMolecule : public Molecule
{
public:
	sipMolecule();
	sipMolecule(const Molecule&,bool);
	sipMolecule(const String&);
	sipMolecule(const Molecule&);
	~sipMolecule();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void select();
	void deselect();
	void clear();
	void destroy();
	bool isValid() const;

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_Molecule Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Molecule Py_PROTO((PyObject *,Molecule **,int *));
extern SIP_EXPORT Molecule *sipForceConvertTo_Molecule Py_PROTO((PyObject *,int *));

#endif
