PROJECT(BALLPython)

IF(BALL_PYTHON_SUPPORT)
	INCLUDE(SIPMacros)

	REMOVE_DEFINITIONS(-pedantic)

	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})

	IF(NOT BALL_HAS_ASIO)
		SET(SIP_DISABLE_FEATURES "BALL_HAS_ASIO")
	ENDIF()
	SET(SIP_EXTRA_OPTIONS "-e")

	# Add the BALLCore python bindings
	SET(SIP_EXTRA_SOURCES 
		BALL/pyBALLSipHelper.C
		BALL/pyIndexList.C
		BALL/pyConstant.C
	)
	ADD_SIP_PYTHON_MODULE(BALLCore BALLCoremodule BALL/BALLCore.sip BALL)
	
	SET(SIP_EXTRA_SOURCES
		VIEW/pyCompositeList.C
		VIEW/pyBALLSipHelper.C
		VIEW/pyColorRGBAVector.C
		VIEW/pyDatasetVector.C
	)
	# Add the VIEW python bindings
	SET(SIP_INCLUDES ${PROJECT_SOURCE_DIR})
	ADD_SIP_PYTHON_MODULE(VIEW VIEWmodule VIEW/VIEW.sip BALL VIEW)

	# Install the BALL.py script
	IF(NOT WIN32)
		SET(BALL_PY_LOCATION ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
	ELSE()
		SET(BALL_PY_LOCATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_CFG_INTDIR})

	ENDIF()

	ADD_CUSTOM_COMMAND(TARGET BALLCoremodule POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/BALL.py ${BALL_PY_LOCATION}
	)

	INSTALL(TARGETS BALLCoremodule VIEWmodule
		RUNTIME DESTINATION bin
		LIBRARY DESTINATION lib
		ARCHIVE DESTINATION lib
		COMPONENT "${COMPONENT_PYTHON_BINDINGS}"
	)

	SET(BALL_PY_DESTINATION lib)

	IF (WIN32)
		SET(BALL_PY_DESTINATION bin)
	ENDIF()

	INSTALL(FILES ${PROJECT_SOURCE_DIR}/BALL.py 
		DESTINATION ${BALL_PY_DESTINATION}
		COMPONENT "${COMPONENT_PYTHON_BINDINGS}"
	)

ENDIF()
