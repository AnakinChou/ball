// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Wed Jul 12 19:49:28 2000

#ifndef _BALLSystem_H
#define	_BALLSystem_H

#include "sipBALLBaseFragment.h"
#include "sipBALLPropertyManager.h"
#include "sipBALLString.h"
#include "sipBALLSize.h"
#include "sipBALLMolecule.h"
#include "sipBALLComposite.h"

#line 8 "system.sip"
	#include <BALL/KERNEL/system.h>
	using namespace BALL;
#line 19 "./sipBALLSystem.h"

extern SIP_EXPORT PyObject *sipClass_System;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_System[];

extern SIP_EXPORT const void *sipCast_System Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_System Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipSystem : public System
{
public:
	sipSystem();
	sipSystem(const System&,bool);
	sipSystem(const String&);
	sipSystem(const System&);
	~sipSystem();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void select();
	void deselect();
	void clear();
	void destroy();
	bool isValid() const;

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_System Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_System Py_PROTO((PyObject *,System **,int,int *));
extern SIP_EXPORT System *sipForceConvertTo_System Py_PROTO((PyObject *,int *));

#endif
