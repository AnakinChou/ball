// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Fri Jun 23 14:19:20 2000

#ifndef _BALLFile_H
#define	_BALLFile_H

#include "sipBALLString.h"

#line 5 "file.sip"
#include <BALL/SYSTEM/file.h>
using namespace BALL;
#line 14 "./sipBALLFile.h"

extern SIP_EXPORT PyObject *sipClass_File;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_File[];

extern SIP_EXPORT const void *sipCast_File Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_File Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipFile : public File
{
public:
	sipFile();
	sipFile(const String&,int);
	sipFile(const File&);
	~sipFile();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	bool hasFormat(const String&) const;
	bool hasFormat();
	static bool sipVH_hasFormat(const sipMethodCache *,sipThisType *,int,const String&);
	static bool sipVH_hasFormat(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_File Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_File Py_PROTO((PyObject *,File **,int,int *));
extern SIP_EXPORT File *sipForceConvertTo_File Py_PROTO((PyObject *,int *));

#endif
