// C++ wrapper class header file.
//
// Generated by SIP v2.4 on Wed Jul 25 07:17:27 2001

#ifndef _BALLObject_H
#define	_BALLObject_H


#line 4 "object.sip"
#include <BALL/CONCEPT/object.h>
using namespace BALL;
#line 13 "sipBALLObject.h"

extern SIP_EXPORT PyObject *sipClass_Object;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Object[];

extern SIP_EXPORT const void *sipCast_Object Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_Object Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipObject : public Object
{
public:
	sipObject() throw();
	sipObject(const Object&) throw();
	~sipObject() throw();
	bool isValid() const throw();
	static bool sipVH_isValid(const sipMethodCache *,sipThisType *,int);
	void clear() throw();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipObject(const sipObject &);
	sipObject &operator = (const sipObject &);

	sipMethodCache sipPyMethods[2];
};

extern SIP_EXPORT int sipCanConvertTo_Object Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Object Py_PROTO((PyObject *,Object **,int,int *));
extern SIP_EXPORT Object *sipForceConvertTo_Object Py_PROTO((PyObject *,int *));

#endif
