// C++ interface header file.
//
// Generated by SIP v2.5pre4 on Sun Jul 29 13:00:58 2001

#ifndef _BALLFloatRegularData3D_h
#define	_BALLFloatRegularData3D_h


#include "sipBALLOutOfMemory.h"
#include "sipBALLOutOfGrid.h"
#include "sipBALLVector3.h"
#include "sipBALLGridIndex3D.h"
#include "sipBALLPosition.h"

#line 18 "regularData3D.sip"
	#include <BALL/DATATYPE/regularData3D.h>
	#include <BALL/COMMON/exception.h>
	#include "sipBALLOutOfMemory.h"
	#include "sipBALLOutOfGrid.h"
	using namespace BALL;
	using namespace BALL::Exception;
	typedef BALL::RegularData3D<float> FloatRegularData3D;
#line 24 "sipBALLFloatRegularData3D.h"

extern SIP_EXPORT PyObject *sipClass_FloatRegularData3D;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_FloatRegularData3D[];

extern SIP_EXPORT const void *sipCast_FloatRegularData3D Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_FloatRegularData3D Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipFloatRegularData3D : public FloatRegularData3D
{
public:
	sipFloatRegularData3D() throw();
	sipFloatRegularData3D(const FloatRegularData3D&) throw(OutOfMemory);
	sipFloatRegularData3D(float,float,float,float,float,float,int,int,int) throw(OutOfMemory);
	sipFloatRegularData3D(Vector3&,Vector3&,int,int,int) throw(OutOfMemory);
	sipFloatRegularData3D(const Vector3&,const Vector3&,float) throw(OutOfMemory);
	~sipFloatRegularData3D() throw();
	void clear() throw();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipFloatRegularData3D(const sipFloatRegularData3D &);
	sipFloatRegularData3D &operator = (const sipFloatRegularData3D &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_FloatRegularData3D Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_FloatRegularData3D Py_PROTO((PyObject *,FloatRegularData3D **,int,int *));
extern SIP_EXPORT FloatRegularData3D *sipForceConvertTo_FloatRegularData3D Py_PROTO((PyObject *,int *));

#endif
