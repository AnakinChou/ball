// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Mon Aug  7 17:20:37 2000

#ifndef _BALLPDBAtom_H
#define	_BALLPDBAtom_H

#include "sipBALLAtom.h"
#include "sipBALLElement.h"
#include "sipBALLString.h"
#include "sipBALLAtomType.h"
#include "sipBALLVector3.h"
#include "sipBALLProtein.h"
#include "sipBALLChain.h"
#include "sipBALLResidue.h"

#line 7 "PDBAtom.sip"
	#include <BALL/KERNEL/PDBAtom.h>
	using namespace BALL;
#line 21 "../CPP/sipBALLPDBAtom.h"

extern SIP_EXPORT PyObject *sipClass_PDBAtom;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_PDBAtom[];

extern SIP_EXPORT const void *sipCast_PDBAtom Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_PDBAtom Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipPDBAtom : public PDBAtom
{
public:
	sipPDBAtom();
	sipPDBAtom(const PDBAtom&,bool);
	sipPDBAtom(Element&,const String&,const String&,AtomType,const Vector3&,const Vector3&,const Vector3&,float,float,char,char,char,float,float);
	sipPDBAtom(const PDBAtom&);
	~sipPDBAtom();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void select();
	void deselect();
	void clear();
	void destroy();
	bool isValid() const;

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_PDBAtom Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_PDBAtom Py_PROTO((PyObject *,PDBAtom **,int,int *));
extern SIP_EXPORT PDBAtom *sipForceConvertTo_PDBAtom Py_PROTO((PyObject *,int *));

#endif
