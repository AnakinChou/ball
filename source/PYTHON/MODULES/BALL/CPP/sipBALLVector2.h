// C++ interface header file.
//
// Generated by SIP v2.5pre4 on Sun Jul 29 13:00:58 2001

#ifndef _BALLVector2_h
#define	_BALLVector2_h


#include "sipBALLPersistentObject.h"
#include "sipBALLDivisionByZero.h"
#include "sipBALLIndexOverflow.h"
#include "sipBALLPosition.h"

#line 16 "vector2.sip"
        #include <BALL/MATHS/vector2.h>
        using namespace BALL;
        using namespace BALL::Exception;
#line 19 "sipBALLVector2.h"

extern SIP_EXPORT PyObject *sipClass_Vector2;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Vector2[];
extern SIP_EXPORT PyMethodDef sipClassVarTab_Vector2[];
extern SIP_EXPORT PyMethodDef *sipClassVarHierTab_Vector2[];

extern SIP_EXPORT const void *sipCast_Vector2 Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_Vector2 Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipVector2 : public Vector2
{
public:
	sipVector2() throw();
	sipVector2(float) throw();
	sipVector2(float,float) throw();
	sipVector2(const Vector2&) throw();
	~sipVector2() throw();
	void clear() throw();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipVector2(const sipVector2 &);
	sipVector2 &operator = (const sipVector2 &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_Vector2 Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Vector2 Py_PROTO((PyObject *,Vector2 **,int,int *));
extern SIP_EXPORT Vector2 *sipForceConvertTo_Vector2 Py_PROTO((PyObject *,int *));

#endif
