// C++ interface header file.
//
// Generated by SIP v2.5 on Wed Aug 22 06:12:41 2001

#ifndef _BALLMainControl_h
#define	_BALLMainControl_h


#include "sipBALLEmbeddable.h"
#include "sipBALLCompositeDescriptor.h"
#include "sipBALLComposite.h"
#include "sipBALLString.h"
#include "sipBALLVector3.h"
#include "sipBALLPyCompositeDescriptorList.h"
#include "sipBALLPosition.h"

#line 9 "mainControl.sip"
	#include <BALL/VIEW/GUI/KERNEL/mainControl.h>
	using namespace BALL;
	using namespace BALL::VIEW;
#line 22 "sipBALLMainControl.h"

extern SIP_EXPORT PyObject *sipClass_MainControl;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_MainControl[];

extern "C" SIP_EXPORT const void *sipCast_MainControl Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_MainControl Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipMainControl : public MainControl
{
public:
	sipMainControl(const MainControl&) throw();
	~sipMainControl() throw();
	void registerThis() throw();
	bool isValid() const throw();
	static bool sipVH_isValid(const sipMethodCache *,sipThisType *,int);
	void destroy() throw();
	static void sipVH_destroy(const sipMethodCache *,sipThisType *,int);
	void clear() throw();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipMainControl(const sipMainControl &);
	sipMainControl &operator = (const sipMainControl &);

	sipMethodCache sipPyMethods[4];
};

extern SIP_EXPORT int sipCanConvertTo_MainControl Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_MainControl Py_PROTO((PyObject *,MainControl **,int,int *));
extern SIP_EXPORT MainControl *sipForceConvertTo_MainControl Py_PROTO((PyObject *,int *));

#endif
