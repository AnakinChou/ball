// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Wed Aug 30 21:44:04 2000

#ifndef _BALLTimeStamp_H
#define	_BALLTimeStamp_H

#include "sipBALLTime.h"

#line 48 "timeStamp.sip"
	#include <BALL/CONCEPT/timeStamp.h>
	using namespace BALL;
#line 14 "../CPP/sipBALLTimeStamp.h"

extern SIP_EXPORT PyObject *sipClass_TimeStamp;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_TimeStamp[];

extern SIP_EXPORT const void *sipCast_TimeStamp Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_TimeStamp Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipTimeStamp : public TimeStamp
{
public:
	sipTimeStamp();
	sipTimeStamp(const TimeStamp&);
	~sipTimeStamp();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void stamp(const Time&);
	static void sipVH_stamp(const sipMethodCache *,sipThisType *,int,const Time&);

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_TimeStamp Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_TimeStamp Py_PROTO((PyObject *,TimeStamp **,int,int *));
extern SIP_EXPORT TimeStamp *sipForceConvertTo_TimeStamp Py_PROTO((PyObject *,int *));

#endif
