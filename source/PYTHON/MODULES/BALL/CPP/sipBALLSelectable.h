// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Thu Oct  5 11:55:20 2000

#ifndef _BALLSelectable_H
#define	_BALLSelectable_H


#line 4 "selectable.sip"
#include <BALL/CONCEPT/selectable.h>
using namespace BALL;
#line 13 "../CPP/sipBALLSelectable.h"

extern SIP_EXPORT PyObject *sipClass_Selectable;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Selectable[];

extern SIP_EXPORT const void *sipCast_Selectable Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_Selectable Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipSelectable : public Selectable
{
public:
	sipSelectable();
	sipSelectable(const Selectable&,bool);
	sipSelectable(const Selectable&);
	~sipSelectable();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void select();
	void deselect();
	static void sipVH_select(const sipMethodCache *,sipThisType *,int);
	static void sipVH_deselect(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[2];
};

extern SIP_EXPORT int sipCanConvertTo_Selectable Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Selectable Py_PROTO((PyObject *,Selectable **,int,int *));
extern SIP_EXPORT Selectable *sipForceConvertTo_Selectable Py_PROTO((PyObject *,int *));

#endif
