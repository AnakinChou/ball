// C++ wrapper class header file.
//
// Generated by SIP v2.4 on Wed Jul 25 07:17:27 2001

#ifndef _BALLSelectable_H
#define	_BALLSelectable_H


#line 4 "selectable.sip"
#include <BALL/CONCEPT/selectable.h>
using namespace BALL;
#line 13 "sipBALLSelectable.h"

extern SIP_EXPORT PyObject *sipClass_Selectable;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Selectable[];

extern SIP_EXPORT const void *sipCast_Selectable Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_Selectable Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipSelectable : public Selectable
{
public:
	sipSelectable() throw();
	sipSelectable(const Selectable&,bool) throw();
	sipSelectable(const Selectable&);
	~sipSelectable() throw();
	void deselect() throw();
	static void sipVH_deselect(const sipMethodCache *,sipThisType *,int);
	void select() throw();
	static void sipVH_select(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipSelectable(const sipSelectable &);
	sipSelectable &operator = (const sipSelectable &);

	sipMethodCache sipPyMethods[2];
};

extern SIP_EXPORT int sipCanConvertTo_Selectable Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Selectable Py_PROTO((PyObject *,Selectable **,int,int *));
extern SIP_EXPORT Selectable *sipForceConvertTo_Selectable Py_PROTO((PyObject *,int *));

#endif
