// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Mon Aug  7 13:57:27 2000

#ifndef _BALLSecondaryStructure_H
#define	_BALLSecondaryStructure_H

#include "sipBALLBaseFragment.h"
#include "sipBALLString.h"
#include "sipBALLProtein.h"
#include "sipBALLChain.h"
#include "sipBALLResidue.h"
#include "sipBALLPDBAtom.h"
#include "sipBALLComposite.h"

#line 7 "secondaryStructure.sip"
	#include <BALL/KERNEL/secondaryStructure.h>
	using namespace BALL;
#line 20 "../CPP/sipBALLSecondaryStructure.h"

extern SIP_EXPORT PyObject *sipClass_SecondaryStructure;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_SecondaryStructure[];

extern SIP_EXPORT const void *sipCast_SecondaryStructure Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_SecondaryStructure Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipSecondaryStructure : public SecondaryStructure
{
public:
	sipSecondaryStructure();
	sipSecondaryStructure(const SecondaryStructure&,bool);
	sipSecondaryStructure(const String&);
	sipSecondaryStructure(const SecondaryStructure&);
	~sipSecondaryStructure();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void select();
	void deselect();
	void clear();
	void destroy();
	bool isValid() const;

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_SecondaryStructure Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_SecondaryStructure Py_PROTO((PyObject *,SecondaryStructure **,int,int *));
extern SIP_EXPORT SecondaryStructure *sipForceConvertTo_SecondaryStructure Py_PROTO((PyObject *,int *));

#endif
