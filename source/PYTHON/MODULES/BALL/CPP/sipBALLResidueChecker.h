// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Thu Jan 11 16:41:15 2001

#ifndef _BALLResidueChecker_H
#define	_BALLResidueChecker_H

#include "sipBALLResidueProcessor.h"
#include "sipBALLFragmentDB.h"
#include "sipBALLResidue.h"

#line 8 "residueChecker.sip"
	#include <BALL/STRUCTURE/residueChecker.h>
	using namespace BALL;
#line 16 "../CPP/sipBALLResidueChecker.h"

extern SIP_EXPORT PyObject *sipClass_ResidueChecker;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_ResidueChecker[];

extern SIP_EXPORT const void *sipCast_ResidueChecker Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_ResidueChecker Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipResidueChecker : public ResidueChecker
{
public:
	sipResidueChecker();
	sipResidueChecker(FragmentDB&);
	sipResidueChecker(const ResidueChecker&,bool);
	sipResidueChecker(const ResidueChecker&);
	~sipResidueChecker();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	Processor::Result operator()(Residue&);

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_ResidueChecker Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_ResidueChecker Py_PROTO((PyObject *,ResidueChecker **,int,int *));
extern SIP_EXPORT ResidueChecker *sipForceConvertTo_ResidueChecker Py_PROTO((PyObject *,int *));

#endif
