# Python wrapper code.
#
# Generated by SIP v2.5pre4 on Sun Jul 29 13:00:59 2001

import libBALLc

libBALLc.sipInitModule()

class Embeddable:
	def __init__(self,*args):
		libBALLc.sipCallCtor(111,self,args)
	def __del__(self):
		__sipDtor__(self)

class ModularWidget(Embeddable):
	def __init__(self,*args):
		libBALLc.sipCallCtor(1,self,args)

class PyWidget(ModularWidget):
	def __init__(self,*args):
		libBALLc.sipCallCtor(0,self,args)

class CompositeDescriptor:
	def __init__(self,*args):
		libBALLc.sipCallCtor(2,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __str__(self):
		return str(self.sipThis)

class MainControl(Embeddable):
	def __init__(self,*args):
		libBALLc.sipCallCtor(3,self,args)

class OpenMode:
	def __init__(self,*args):
		libBALLc.sipCallCtor(4,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __str__(self):
		return str(self.sipThis)

class File:
	def __init__(self,*args):
		libBALLc.sipCallCtor(91,self,args)
	def __del__(self):
		__sipDtor__(self)

class std__openmode:
	def __init__(self,*args):
		libBALLc.sipCallCtor(5,self,args)
	def __del__(self):
		__sipDtor__(self)

class ResidueProcessor:
	def __init__(self,*args):
		libBALLc.sipCallCtor(20,self,args)
	def __del__(self):
		__sipDtor__(self)

class ResidueChecker(ResidueProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(6,self,args)

class AtomProcessor:
	def __init__(self,*args):
		libBALLc.sipCallCtor(29,self,args)
	def __del__(self):
		__sipDtor__(self)

class TransformationProcessor(AtomProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(7,self,args)

class TranslationProcessor(AtomProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(8,self,args)

class CompositeProcessor:
	def __init__(self,*args):
		libBALLc.sipCallCtor(63,self,args)
	def __del__(self):
		__sipDtor__(self)

class FragmentDistanceCollector(CompositeProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(9,self,args)

class GeometricCenterProcessor(AtomProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(10,self,args)

class BoundingBoxProcessor(AtomProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(11,self,args)

class FragmentProcessor:
	def __init__(self,*args):
		libBALLc.sipCallCtor(21,self,args)
	def __del__(self):
		__sipDtor__(self)

class BuildBondsProcessor(FragmentProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(12,self,args)

class AddHydrogensProcessor(FragmentProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(13,self,args)

class NormalizeNamesProcessor(FragmentProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(14,self,args)

class FragmentDB:
	def __init__(self,*args):
		libBALLc.sipCallCtor(15,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(15,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(15,self,name,value)

class AssignRadiusProcessor(AtomProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(17,self,args)

class AssignChargeProcessor(AssignRadiusProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(16,self,args)

class ClearRadiusProcessor(AtomProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(18,self,args)

class ClearChargeProcessor(AtomProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(19,self,args)

class EnergyMinimizer:
	def __init__(self,*args):
		libBALLc.sipCallCtor(22,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(22,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(22,self,name,value)

class ConjugateGradientMinimizer(EnergyMinimizer):
	def __init__(self,*args):
		libBALLc.sipCallCtor(23,self,args)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(23,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(23,self,name,value)

class MolecularDynamics:
	def __init__(self,*args):
		libBALLc.sipCallCtor(25,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(25,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(25,self,name,value)

class MicroCanonicalMD(MolecularDynamics):
	def __init__(self,*args):
		libBALLc.sipCallCtor(24,self,args)

class CanonicalMD(MolecularDynamics):
	def __init__(self,*args):
		libBALLc.sipCallCtor(26,self,args)

class SnapShotManager:
	def __init__(self,*args):
		libBALLc.sipCallCtor(27,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(27,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(27,self,name,value)

class GeneralException:
	def __init__(self,*args):
		libBALLc.sipCallCtor(133,self,args)
	def __del__(self):
		__sipDtor__(self)

class OutOfMemory(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(122,self,args)

class SnapShot(OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory):
	def __init__(self,*args):
		libBALLc.sipCallCtor(28,self,args)

class RuleProcessor(AtomProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(34,self,args)

class RuleEvaluator:
	def __init__(self,*args):
		libBALLc.sipCallCtor(30,self,args)
	def __del__(self):
		__sipDtor__(self)

class RadiusRuleProcessor(RuleProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(31,self,args)

class PeriodicBoundary:
	def __init__(self,*args):
		libBALLc.sipCallCtor(32,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(32,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(32,self,name,value)

class Gradient:
	def __init__(self,*args):
		libBALLc.sipCallCtor(33,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(33,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(33,self,name,value)

class ForceFieldComponent:
	def __init__(self,*args):
		libBALLc.sipCallCtor(46,self,args)
	def __del__(self):
		__sipDtor__(self)

class FileNotFound(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(118,self,args)

class ForceField(FileNotFound,FileNotFound):
	def __init__(self,*args):
		libBALLc.sipCallCtor(48,self,args)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(48,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(48,self,name,value)

class ChargeRuleProcessor(RuleProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(35,self,args)

class AtomVector:
	def __init__(self,*args):
		libBALLc.sipCallCtor(36,self,args)
	def __del__(self):
		__sipDtor__(self)

class CharmmTorsion(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(37,self,args)

class CharmmStretch(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(38,self,args)

class CharmmNonBonded(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(39,self,args)

class CharmmImproperTorsion(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(40,self,args)

class CharmmBend(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(41,self,args)

class CharmmFF(ForceField):
	def __init__(self,*args):
		libBALLc.sipCallCtor(42,self,args)

class AmberTorsion(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(43,self,args)

class AmberStretch(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(44,self,args)

class AmberNonBonded(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(45,self,args)

class AmberBend(ForceFieldComponent):
	def __init__(self,*args):
		libBALLc.sipCallCtor(47,self,args)

class AmberFF(ForceField):
	def __init__(self,*args):
		libBALLc.sipCallCtor(49,self,args)

class Vector4:
	def __init__(self,*args):
		libBALLc.sipCallCtor(50,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(50,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(50,self,name,value)

class PersistentObject:
	def __init__(self,*args):
		libBALLc.sipCallCtor(114,self,args)
	def __del__(self):
		__sipDtor__(self)

class Vector3(PersistentObject):
	def __init__(self,*args):
		libBALLc.sipCallCtor(51,self,args)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(51,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(51,self,name,value)
	def __str__(self):
		return str(self.sipThis)

class DivisionByZero(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(119,self,args)

class IndexOverflow(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(130,self,args)

class Vector2(PersistentObject,DivisionByZero,IndexOverflow,DivisionByZero,DivisionByZero):
	def __init__(self,*args):
		libBALLc.sipCallCtor(52,self,args)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(52,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(52,self,name,value)
	def __str__(self):
		return str(self.sipThis)

class Surface:
	def __init__(self,*args):
		libBALLc.sipCallCtor(53,self,args)
	def __del__(self):
		__sipDtor__(self)

class Sphere3:
	def __init__(self,*args):
		libBALLc.sipCallCtor(54,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(54,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(54,self,name,value)

class Quaternion:
	def __init__(self,*args):
		libBALLc.sipCallCtor(55,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(55,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(55,self,name,value)

class Plane3:
	def __init__(self,*args):
		libBALLc.sipCallCtor(56,self,args)
	def __del__(self):
		__sipDtor__(self)

class Matrix4x4:
	def __init__(self,*args):
		libBALLc.sipCallCtor(57,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(57,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(57,self,name,value)

class Line3:
	def __init__(self,*args):
		libBALLc.sipCallCtor(58,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(58,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(58,self,name,value)

class Circle3:
	def __init__(self,*args):
		libBALLc.sipCallCtor(59,self,args)
	def __del__(self):
		__sipDtor__(self)

class Box3:
	def __init__(self,*args):
		libBALLc.sipCallCtor(60,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(60,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(60,self,name,value)
	def __str__(self):
		return str(self.sipThis)

class Angle:
	def __init__(self,*args):
		libBALLc.sipCallCtor(61,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __str__(self):
		return str(self.sipThis)

class Object:
	def __init__(self,*args):
		libBALLc.sipCallCtor(113,self,args)
	def __del__(self):
		__sipDtor__(self)

class Selectable:
	def __init__(self,*args):
		libBALLc.sipCallCtor(112,self,args)
	def __del__(self):
		__sipDtor__(self)

class Composite(PersistentObject,Object,Selectable):
	def __init__(self,*args):
		libBALLc.sipCallCtor(115,self,args)

class PropertyManager:
	def __init__(self,*args):
		libBALLc.sipCallCtor(106,self,args)
	def __del__(self):
		__sipDtor__(self)

class AtomContainer(Composite,PropertyManager):
	def __init__(self,*args):
		libBALLc.sipCallCtor(79,self,args)
	def __str__(self):
		return str(self.sipThis)

class System(AtomContainer,PropertyManager):
	def __init__(self,*args):
		libBALLc.sipCallCtor(62,self,args)
	def __str__(self):
		return str(self.sipThis)

class Selector(CompositeProcessor):
	def __init__(self,*args):
		libBALLc.sipCallCtor(64,self,args)

class SecondaryStructure(AtomContainer):
	def __init__(self,*args):
		libBALLc.sipCallCtor(65,self,args)
	def __str__(self):
		return str(self.sipThis)

class Fragment(AtomContainer):
	def __init__(self,*args):
		libBALLc.sipCallCtor(71,self,args)
	def __str__(self):
		return str(self.sipThis)

class Residue(Fragment):
	def __init__(self,*args):
		libBALLc.sipCallCtor(66,self,args)
	def __str__(self):
		return str(self.sipThis)

class Molecule(AtomContainer):
	def __init__(self,*args):
		libBALLc.sipCallCtor(70,self,args)
	def __str__(self):
		return str(self.sipThis)

class Protein(Molecule):
	def __init__(self,*args):
		libBALLc.sipCallCtor(67,self,args)
	def __str__(self):
		return str(self.sipThis)

class Nucleotide(Fragment):
	def __init__(self,*args):
		libBALLc.sipCallCtor(68,self,args)

class NucleicAcid(Molecule):
	def __init__(self,*args):
		libBALLc.sipCallCtor(69,self,args)

class Expression:
	def __init__(self,*args):
		libBALLc.sipCallCtor(72,self,args)
	def __del__(self):
		__sipDtor__(self)

class UnaryAtomPredicate:
	def __init__(self,*args):
		libBALLc.sipCallCtor(109,self,args)
	def __del__(self):
		__sipDtor__(self)

class ExpressionPredicate(UnaryAtomPredicate):
	def __init__(self,*args):
		libBALLc.sipCallCtor(73,self,args)

class Chain(AtomContainer):
	def __init__(self,*args):
		libBALLc.sipCallCtor(74,self,args)
	def __str__(self):
		return str(self.sipThis)

class Bond(Composite,PropertyManager):
	def __init__(self,*args):
		libBALLc.sipCallCtor(75,self,args)
	def __str__(self):
		return str(self.sipThis)

class PTE_(PropertyManager):
	def __init__(self,*args):
		libBALLc.sipCallCtor(76,self,args)

class Element(PropertyManager):
	def __init__(self,*args):
		libBALLc.sipCallCtor(77,self,args)

class Atom(Composite,PropertyManager):
	def __init__(self,*args):
		libBALLc.sipCallCtor(81,self,args)
	def __str__(self):
		return str(self.sipThis)

class PDBAtom(Atom):
	def __init__(self,*args):
		libBALLc.sipCallCtor(78,self,args)
	def __str__(self):
		return str(self.sipThis)

class AtomType:
	def __init__(self,*args):
		libBALLc.sipCallCtor(80,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __str__(self):
		return str(self.sipThis)

class TrajectoryFile(File):
	def __init__(self,*args):
		libBALLc.sipCallCtor(84,self,args)

class DCDFile(TrajectoryFile,FileNotFound):
	def __init__(self,*args):
		libBALLc.sipCallCtor(82,self,args)

class DCDHeader:
	def __init__(self,*args):
		libBALLc.sipCallCtor(83,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(83,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(83,self,name,value)

class ResourceFile(File):
	def __init__(self,*args):
		libBALLc.sipCallCtor(85,self,args)

class ResourceEntry:
	def __init__(self,*args):
		libBALLc.sipCallCtor(86,self,args)
	def __del__(self):
		__sipDtor__(self)

class XYZFile(File):
	def __init__(self,*args):
		libBALLc.sipCallCtor(87,self,args)

class PDBFile:
	def __init__(self,*args):
		libBALLc.sipCallCtor(88,self,args)
	def __del__(self):
		__sipDtor__(self)

class MOL2File(File):
	def __init__(self,*args):
		libBALLc.sipCallCtor(89,self,args)

class INIFile:
	def __init__(self,*args):
		libBALLc.sipCallCtor(90,self,args)
	def __del__(self):
		__sipDtor__(self)

class HINFile(File):
	def __init__(self,*args):
		libBALLc.sipCallCtor(92,self,args)

class NullPointer(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(126,self,args)

class IndexUnderflow(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(132,self,args)

class String(NullPointer,IndexOverflow,IndexUnderflow,NullPointer,IndexOverflow,IndexUnderflow):
	def __init__(self,*args):
		libBALLc.sipCallCtor(93,self,args)
	def __str__(self):
		return str(self.sipThis)

class Substring:
	def __init__(self,*args):
		libBALLc.sipCallCtor(94,self,args)
	def __del__(self):
		__sipDtor__(self)

class RegularExpression:
	def __init__(self,*args):
		libBALLc.sipCallCtor(95,self,args)
	def __del__(self):
		__sipDtor__(self)

class OutOfGrid(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(121,self,args)

class FloatRegularData3D(OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,OutOfGrid,OutOfGrid,OutOfGrid,OutOfGrid,OutOfGrid,OutOfGrid,OutOfGrid):
	def __init__(self,*args):
		libBALLc.sipCallCtor(96,self,args)

class GridIndex3D:
	def __init__(self,*args):
		libBALLc.sipCallCtor(97,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(97,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(97,self,name,value)

class FloatRegularData2D(OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,OutOfGrid,OutOfGrid,OutOfGrid,OutOfGrid,OutOfGrid,OutOfGrid):
	def __init__(self,*args):
		libBALLc.sipCallCtor(98,self,args)

class GridIndex2D:
	def __init__(self,*args):
		libBALLc.sipCallCtor(99,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(99,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(99,self,name,value)

class FloatRegularData1D:
	def __init__(self,*args):
		libBALLc.sipCallCtor(100,self,args)
	def __del__(self):
		__sipDtor__(self)

class Options:
	def __init__(self,*args):
		libBALLc.sipCallCtor(101,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __str__(self):
		return str(self.sipThis)

class BitVector(OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,IndexUnderflow,OutOfMemory,IndexUnderflow,OutOfMemory,IndexUnderflow,IndexOverflow,IndexUnderflow,OutOfMemory,IndexUnderflow,OutOfMemory,IndexUnderflow,OutOfMemory,OutOfMemory,OutOfMemory,OutOfMemory,IndexUnderflow,IndexOverflow,IndexUnderflow,IndexOverflow):
	def __init__(self,*args):
		libBALLc.sipCallCtor(102,self,args)

class Bit:
	def __init__(self,*args):
		libBALLc.sipCallCtor(103,self,args)
	def __del__(self):
		__sipDtor__(self)

class TimeStamp:
	def __init__(self,*args):
		libBALLc.sipCallCtor(104,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __str__(self):
		return str(self.sipThis)

class PreciseTime:
	def __init__(self,*args):
		libBALLc.sipCallCtor(105,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __str__(self):
		return str(self.sipThis)

class NamedProperty(PersistentObject):
	def __init__(self,*args):
		libBALLc.sipCallCtor(107,self,args)

class Processor:
	def __init__(self,*args):
		libBALLc.sipCallCtor(108,self,args)
	def __del__(self):
		__sipDtor__(self)

class UnaryCompositePredicate:
	def __init__(self,*args):
		libBALLc.sipCallCtor(110,self,args)
	def __del__(self):
		__sipDtor__(self)

class VersionInfo:
	def __init__(self,*args):
		libBALLc.sipCallCtor(116,self,args)
	def __del__(self):
		__sipDtor__(self)
	def __str__(self):
		return str(self.sipThis)

class GlobalExceptionHandler:
	def __init__(self,*args):
		libBALLc.sipCallCtor(117,self,args)
	def __del__(self):
		__sipDtor__(self)

class BufferOverflow(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(120,self,args)

class NotImplemented(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(123,self,args)

class IncompatibleIterators(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(124,self,args)

class InvalidIterator(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(125,self,args)

class IllegalSelfOperation(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(127,self,args)

class InvalidFormat(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(128,self,args)

class InvalidRange(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(129,self,args)

class SizeUnderflow(GeneralException):
	def __init__(self,*args):
		libBALLc.sipCallCtor(131,self,args)

class Constant:
	def __init__(self,*args):
		libBALLc.sipCallCtor(134,self,args)
	def __getattr__(self,name):
		return libBALLc.sipCallGetVar(134,self,name)
	def __setattr__(self,name,value):
		return libBALLc.sipCallSetVar(134,self,name,value)

# Register the classes with the C++ module.

libBALLc.sipRegisterClasses()
