// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Thu Jan 11 16:41:15 2001

#ifndef _BALLPyWidget_H
#define	_BALLPyWidget_H

#include "sipBALLModularWidget.h"
#include "sipBALLString.h"
#include "sipBALLPosition.h"
#include "sipBALLMainControl.h"

#line 8 "pyWidget.sip"
	#include <BALL/VIEW/GUI/WIDGETS/pyWidget.h>
	using namespace BALL;
	using namespace VIEW;
#line 18 "../CPP/sipBALLPyWidget.h"

extern SIP_EXPORT PyObject *sipClass_PyWidget;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_PyWidget[];

extern SIP_EXPORT const void *sipCast_PyWidget Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_PyWidget Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipPyWidget : public PyWidget
{
public:
	sipPyWidget(const PyWidget&);
	~sipPyWidget();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void registerThis();
	void checkMenu(MainControl&);
	void startInterpreter();
	void stopInterpreter();
	void initializeWidget(MainControl&);
	void finalizeWidget(MainControl&);
	void cursorUp(bool);
	void cursorDown(bool);
	void newLine();
	void cursorLeft(bool,bool);
	void backspace();
	void cursorRight(bool,bool);
	static void sipVH_startInterpreter(const sipMethodCache *,sipThisType *,int);
	static void sipVH_stopInterpreter(const sipMethodCache *,sipThisType *,int);
	static void sipVH_cursorUp(const sipMethodCache *,sipThisType *,int,bool);
	static void sipVH_cursorDown(const sipMethodCache *,sipThisType *,int,bool);
	static void sipVH_newLine(const sipMethodCache *,sipThisType *,int);
	static void sipVH_cursorLeft(const sipMethodCache *,sipThisType *,int,bool,bool);
	static void sipVH_backspace(const sipMethodCache *,sipThisType *,int);
	static void sipVH_cursorRight(const sipMethodCache *,sipThisType *,int,bool,bool);

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[12];
};

extern SIP_EXPORT int sipCanConvertTo_PyWidget Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_PyWidget Py_PROTO((PyObject *,PyWidget **,int,int *));
extern SIP_EXPORT PyWidget *sipForceConvertTo_PyWidget Py_PROTO((PyObject *,int *));

#endif
