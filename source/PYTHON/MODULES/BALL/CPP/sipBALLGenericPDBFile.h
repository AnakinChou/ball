// C++ interface header file.
//
// Generated by SIP v2.5pre4cvs on Mon Aug 20 19:50:40 2001

#ifndef _BALLGenericPDBFile_h
#define	_BALLGenericPDBFile_h


#include "sipBALLFile.h"
#include "sipBALLPropertyManager.h"
#include "sipBALLIndex.h"

#line 7 "genericPDBFile.sip"
	#include <BALL/FORMAT/genericPDBFile.h>
	using namespace BALL;
#line 17 "sipBALLGenericPDBFile.h"

extern SIP_EXPORT PyObject *sipClass_GenericPDBFile;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_GenericPDBFile[];

extern "C" SIP_EXPORT const void *sipCast_GenericPDBFile Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_GenericPDBFile Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipGenericPDBFile : public GenericPDBFile
{
public:
	sipGenericPDBFile();
	sipGenericPDBFile(const GenericPDBFile&);
	~sipGenericPDBFile() throw();
	float getVersion() const;
	static float sipVH_getVersion(const sipMethodCache *,sipThisType *,int);
	void clear(int);
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int,int);

	sipThisType *sipPyThis;

private:
	sipGenericPDBFile(const sipGenericPDBFile &);
	sipGenericPDBFile &operator = (const sipGenericPDBFile &);

	sipMethodCache sipPyMethods[2];
};

extern SIP_EXPORT int sipCanConvertTo_GenericPDBFile Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_GenericPDBFile Py_PROTO((PyObject *,GenericPDBFile **,int,int *));
extern SIP_EXPORT GenericPDBFile *sipForceConvertTo_GenericPDBFile Py_PROTO((PyObject *,int *));

#endif
