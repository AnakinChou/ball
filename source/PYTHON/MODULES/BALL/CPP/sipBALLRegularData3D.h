// C++ interface header file.
//
// Generated by SIP v2.5 on Wed Aug 22 06:12:42 2001

#ifndef _BALLRegularData3D_h
#define	_BALLRegularData3D_h


#include "sipBALLOutOfMemory.h"
#include "sipBALLOutOfGrid.h"
#include "sipBALLVector3.h"
#include "sipBALLRegularData3DGridIndex.h"
#include "sipBALLPosition.h"

#line 5 "regularData3D.sip"
	#include <BALL/DATATYPE/regularData3D.h>
	using namespace BALL;
	using namespace BALL::Exception;
#line 20 "sipBALLRegularData3D.h"

extern SIP_EXPORT PyObject *sipClass_RegularData3D;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_RegularData3D[];

extern "C" SIP_EXPORT const void *sipCast_RegularData3D Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_RegularData3D Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipRegularData3D : public RegularData3D
{
public:
	sipRegularData3D() throw();
	sipRegularData3D(const RegularData3D&) throw(OutOfMemory);
	sipRegularData3D(float,float,float,float,float,float,int,int,int) throw(OutOfMemory);
	sipRegularData3D(Vector3&,Vector3&,int,int,int) throw(OutOfMemory);
	sipRegularData3D(const Vector3&,const Vector3&,float) throw(OutOfMemory);
	~sipRegularData3D() throw();
	void clear() throw();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipRegularData3D(const sipRegularData3D &);
	sipRegularData3D &operator = (const sipRegularData3D &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_RegularData3D Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_RegularData3D Py_PROTO((PyObject *,RegularData3D **,int,int *));
extern SIP_EXPORT RegularData3D *sipForceConvertTo_RegularData3D Py_PROTO((PyObject *,int *));

#endif
