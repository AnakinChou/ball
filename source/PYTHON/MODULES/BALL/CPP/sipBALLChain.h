// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Mon Aug 28 17:40:27 2000

#ifndef _BALLChain_H
#define	_BALLChain_H

#include "sipBALLBaseFragment.h"
#include "sipBALLString.h"
#include "sipBALLProtein.h"
#include "sipBALLSecondaryStructure.h"
#include "sipBALLResidue.h"
#include "sipBALLPDBAtom.h"
#include "sipBALLComposite.h"

#line 7 "chain.sip"
	#include <BALL/KERNEL/chain.h>
	using namespace BALL;
#line 20 "../CPP/sipBALLChain.h"

extern SIP_EXPORT PyObject *sipClass_Chain;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Chain[];

extern SIP_EXPORT const void *sipCast_Chain Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_Chain Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipChain : public Chain
{
public:
	sipChain();
	sipChain(const Chain&,bool);
	sipChain(const String&);
	sipChain(const Chain&);
	~sipChain();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void select();
	void deselect();
	void clear();
	void destroy();
	bool isValid() const;

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_Chain Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Chain Py_PROTO((PyObject *,Chain **,int,int *));
extern SIP_EXPORT Chain *sipForceConvertTo_Chain Py_PROTO((PyObject *,int *));

#endif
