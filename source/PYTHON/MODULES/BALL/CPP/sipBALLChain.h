// C++ interface header file.
//
// Generated by SIP v2.5 on Wed Aug 22 06:12:41 2001

#ifndef _BALLChain_h
#define	_BALLChain_h


#include "sipBALLAtomContainer.h"
#include "sipBALLString.h"
#include "sipBALLProtein.h"
#include "sipBALLSecondaryStructure.h"
#include "sipBALLResidue.h"
#include "sipBALLPDBAtom.h"
#include "sipBALLComposite.h"

#line 7 "chain.sip"
	#include <BALL/KERNEL/chain.h>
	using namespace BALL;
#line 21 "sipBALLChain.h"

extern SIP_EXPORT PyObject *sipClass_Chain;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Chain[];

extern "C" SIP_EXPORT const void *sipCast_Chain Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_Chain Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipChain : public Chain
{
public:
	sipChain();
	sipChain(const Chain&,bool);
	sipChain(const String&);
	sipChain(const Chain&);
	~sipChain() throw();
	void deselect() throw();
	void select() throw();
	bool isValid() const throw();
	void destroy() throw();
	void clear() throw();

	sipThisType *sipPyThis;

private:
	sipChain(const sipChain &);
	sipChain &operator = (const sipChain &);

	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_Chain Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Chain Py_PROTO((PyObject *,Chain **,int,int *));
extern SIP_EXPORT Chain *sipForceConvertTo_Chain Py_PROTO((PyObject *,int *));

#endif
