// C++ interface header file.
//
// Generated by SIP v2.5pre4 on Sun Jul 29 13:00:58 2001

#ifndef _BALLCharmmTorsion_h
#define	_BALLCharmmTorsion_h


#include "sipBALLForceFieldComponent.h"
#include "sipBALLForceField.h"

#line 7 "charmmTorsion.sip"
	#include <BALL/MOLMEC/CHARMM/charmmTorsion.h>
	using namespace BALL;
#line 16 "sipBALLCharmmTorsion.h"

extern SIP_EXPORT PyObject *sipClass_CharmmTorsion;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_CharmmTorsion[];

extern SIP_EXPORT const void *sipCast_CharmmTorsion Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_CharmmTorsion Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipCharmmTorsion : public CharmmTorsion
{
public:
	sipCharmmTorsion();
	sipCharmmTorsion(ForceField&);
	sipCharmmTorsion(const CharmmTorsion&,bool);
	sipCharmmTorsion(const CharmmTorsion&);
	~sipCharmmTorsion();
	double getEnergy() const;
	void updateForces();
	double updateEnergy();
	bool setup();

	sipThisType *sipPyThis;

private:
	sipCharmmTorsion(const sipCharmmTorsion &);
	sipCharmmTorsion &operator = (const sipCharmmTorsion &);

	sipMethodCache sipPyMethods[4];
};

extern SIP_EXPORT int sipCanConvertTo_CharmmTorsion Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_CharmmTorsion Py_PROTO((PyObject *,CharmmTorsion **,int,int *));
extern SIP_EXPORT CharmmTorsion *sipForceConvertTo_CharmmTorsion Py_PROTO((PyObject *,int *));

#endif
