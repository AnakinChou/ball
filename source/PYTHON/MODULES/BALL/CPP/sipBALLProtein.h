// C++ interface header file.
//
// Generated by SIP v2.5pre4cvs on Tue Jul 31 20:01:05 2001

#ifndef _BALLProtein_h
#define	_BALLProtein_h


#include "sipBALLMolecule.h"
#include "sipBALLString.h"
#include "sipBALLChain.h"
#include "sipBALLSecondaryStructure.h"
#include "sipBALLResidue.h"
#include "sipBALLPDBAtom.h"

#line 7 "protein.sip"
	#include <BALL/KERNEL/protein.h>
	using namespace BALL;
#line 20 "sipBALLProtein.h"

extern SIP_EXPORT PyObject *sipClass_Protein;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Protein[];

extern "C" SIP_EXPORT const void *sipCast_Protein Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_Protein Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipProtein : public Protein
{
public:
	sipProtein();
	sipProtein(const Protein&,bool);
	sipProtein(const String&,const String&);
	sipProtein(const Protein&);
	~sipProtein() throw();
	void deselect() throw();
	void select() throw();
	bool isValid() const throw();
	void destroy() throw();
	void clear() throw();

	sipThisType *sipPyThis;

private:
	sipProtein(const sipProtein &);
	sipProtein &operator = (const sipProtein &);

	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_Protein Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Protein Py_PROTO((PyObject *,Protein **,int,int *));
extern SIP_EXPORT Protein *sipForceConvertTo_Protein Py_PROTO((PyObject *,int *));

#endif
