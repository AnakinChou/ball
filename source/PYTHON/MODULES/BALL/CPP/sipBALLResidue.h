// C++ interface header file.
//
// Generated by SIP v2.5pre4cvs on Mon Aug 20 19:50:40 2001

#ifndef _BALLResidue_h
#define	_BALLResidue_h


#include "sipBALLFragment.h"
#include "sipBALLString.h"
#include "sipBALLAngle.h"
#include "sipBALLProtein.h"
#include "sipBALLChain.h"
#include "sipBALLPDBAtom.h"
#include "sipBALLPosition.h"
#include "sipBALLComposite.h"

#line 7 "residue.sip"
	#include <BALL/KERNEL/residue.h>
	using namespace BALL;
#line 22 "sipBALLResidue.h"

extern SIP_EXPORT PyObject *sipClass_Residue;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Residue[];

extern "C" SIP_EXPORT const void *sipCast_Residue Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_Residue Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipResidue : public Residue
{
public:
	sipResidue();
	sipResidue(const Residue&,bool);
	sipResidue(const String&,const String&,char);
	sipResidue(const Residue&);
	~sipResidue() throw();
	void deselect() throw();
	void select() throw();
	bool isValid() const throw();
	void destroy() throw();
	void clear() throw();

	sipThisType *sipPyThis;

private:
	sipResidue(const sipResidue &);
	sipResidue &operator = (const sipResidue &);

	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_Residue Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Residue Py_PROTO((PyObject *,Residue **,int,int *));
extern SIP_EXPORT Residue *sipForceConvertTo_Residue Py_PROTO((PyObject *,int *));

#endif
