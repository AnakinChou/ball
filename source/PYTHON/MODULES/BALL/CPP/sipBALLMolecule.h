// C++ interface header file.
//
// Generated by SIP v2.5 on Wed Aug 22 06:12:41 2001

#ifndef _BALLMolecule_h
#define	_BALLMolecule_h


#include "sipBALLAtomContainer.h"
#include "sipBALLString.h"
#include "sipBALLSystem.h"
#include "sipBALLAtom.h"
#include "sipBALLComposite.h"

#line 7 "molecule.sip"
	#include <BALL/KERNEL/molecule.h>
	using namespace BALL;
#line 19 "sipBALLMolecule.h"

extern SIP_EXPORT PyObject *sipClass_Molecule;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Molecule[];

extern "C" SIP_EXPORT const void *sipCast_Molecule Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_Molecule Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipMolecule : public Molecule
{
public:
	sipMolecule();
	sipMolecule(const Molecule&,bool);
	sipMolecule(const String&);
	sipMolecule(const Molecule&);
	~sipMolecule() throw();
	void deselect() throw();
	void select() throw();
	bool isValid() const throw();
	void destroy() throw();
	void clear() throw();

	sipThisType *sipPyThis;

private:
	sipMolecule(const sipMolecule &);
	sipMolecule &operator = (const sipMolecule &);

	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_Molecule Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Molecule Py_PROTO((PyObject *,Molecule **,int,int *));
extern SIP_EXPORT Molecule *sipForceConvertTo_Molecule Py_PROTO((PyObject *,int *));

#endif
