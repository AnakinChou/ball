// C++ interface header file.
//
// Generated by SIP v2.5pre4 on Sun Jul 29 13:00:58 2001

#ifndef _BALLClearChargeProcessor_h
#define	_BALLClearChargeProcessor_h


#include "sipBALLAtomProcessor.h"
#include "sipBALLAtom.h"

#line 8 "defaultProcessors.sip"
	#include <BALL/STRUCTURE/defaultProcessors.h>
	using namespace BALL;
#line 16 "sipBALLClearChargeProcessor.h"

extern SIP_EXPORT PyObject *sipClass_ClearChargeProcessor;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_ClearChargeProcessor[];

extern SIP_EXPORT const void *sipCast_ClearChargeProcessor Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_ClearChargeProcessor Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipClearChargeProcessor : public ClearChargeProcessor
{
public:
	sipClearChargeProcessor();
	sipClearChargeProcessor(const ClearChargeProcessor&);
	~sipClearChargeProcessor();
	Processor::Result operator()(Atom&);

	sipThisType *sipPyThis;

private:
	sipClearChargeProcessor(const sipClearChargeProcessor &);
	sipClearChargeProcessor &operator = (const sipClearChargeProcessor &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_ClearChargeProcessor Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_ClearChargeProcessor Py_PROTO((PyObject *,ClearChargeProcessor **,int,int *));
extern SIP_EXPORT ClearChargeProcessor *sipForceConvertTo_ClearChargeProcessor Py_PROTO((PyObject *,int *));

#endif
