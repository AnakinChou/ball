// C++ wrapper class header file.
//
// Generated by SIP v2.4 on Wed Jul 25 07:17:27 2001

#ifndef _BALLBit_H
#define	_BALLBit_H


#line 4 "bitVector.sip"
	#include <BALL/DATATYPE/bitVector.h>
	using namespace BALL;
#line 13 "sipBALLBit.h"

extern SIP_EXPORT PyObject *sipClass_Bit;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Bit[];

extern SIP_EXPORT const void *sipCast_Bit Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_Bit Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipBit : public Bit
{
public:
	sipBit() throw();
	sipBit(const Bit&) throw();
	~sipBit() throw();
	void clear() throw();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipBit(const sipBit &);
	sipBit &operator = (const sipBit &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_Bit Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Bit Py_PROTO((PyObject *,Bit **,int,int *));
extern SIP_EXPORT Bit *sipForceConvertTo_Bit Py_PROTO((PyObject *,int *));

#endif
