// C++ interface header file.
//
// Generated by SIP v2.5pre4cvs on Wed Aug 15 16:06:15 2001

#ifndef _BALLXYZFile_h
#define	_BALLXYZFile_h


#include "sipBALLFile.h"
#include "sipBALLFileNotFound.h"
#include "sipBALLString.h"
#include "sipBALLstd__openmode.h"
#include "sipBALLSystem.h"

#line 7 "XYZFile.sip"
	#include <BALL/FORMAT/XYZFile.h>
	using namespace BALL;
#line 19 "sipBALLXYZFile.h"

extern SIP_EXPORT PyObject *sipClass_XYZFile;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_XYZFile[];

extern "C" SIP_EXPORT const void *sipCast_XYZFile Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_XYZFile Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipXYZFile : public XYZFile
{
public:
	sipXYZFile();
	sipXYZFile(const String&,std__openmode) throw(FileNotFound);
	sipXYZFile(const XYZFile&);
	~sipXYZFile() throw();
	void read(System&);
	static void sipVH_read(const sipMethodCache *,sipThisType *,int,System&);
	void write(const System&);
	static void sipVH_write(const sipMethodCache *,sipThisType *,int,const System&);

	sipThisType *sipPyThis;

private:
	sipXYZFile(const sipXYZFile &);
	sipXYZFile &operator = (const sipXYZFile &);

	sipMethodCache sipPyMethods[2];
};

extern SIP_EXPORT int sipCanConvertTo_XYZFile Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_XYZFile Py_PROTO((PyObject *,XYZFile **,int,int *));
extern SIP_EXPORT XYZFile *sipForceConvertTo_XYZFile Py_PROTO((PyObject *,int *));

#endif
