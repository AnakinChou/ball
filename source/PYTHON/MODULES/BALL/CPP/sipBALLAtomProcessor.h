// C++ interface header file.
//
// Generated by SIP v2.5pre4 on Sun Jul 29 13:00:58 2001

#ifndef _BALLAtomProcessor_h
#define	_BALLAtomProcessor_h


#include "sipBALLAtom.h"

#line 6 "pyAtomProcessor.sip"
	#include <BALL/CONCEPT/processor.h>
	typedef UnaryProcessor<Atom> AtomProcessor;
#line 15 "sipBALLAtomProcessor.h"

extern SIP_EXPORT PyObject *sipClass_AtomProcessor;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_AtomProcessor[];

extern SIP_EXPORT const void *sipCast_AtomProcessor Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_AtomProcessor Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipAtomProcessor : public AtomProcessor
{
public:
	sipAtomProcessor();
	sipAtomProcessor(const AtomProcessor&);
	~sipAtomProcessor();
	Processor::Result operator()(Atom&);
	static Processor::Result sipVH_CallOp(const sipMethodCache *,sipThisType *,int,Atom&);

	sipThisType *sipPyThis;

private:
	sipAtomProcessor(const sipAtomProcessor &);
	sipAtomProcessor &operator = (const sipAtomProcessor &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_AtomProcessor Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_AtomProcessor Py_PROTO((PyObject *,AtomProcessor **,int,int *));
extern SIP_EXPORT AtomProcessor *sipForceConvertTo_AtomProcessor Py_PROTO((PyObject *,int *));

#endif
