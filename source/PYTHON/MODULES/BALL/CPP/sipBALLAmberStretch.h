// C++ interface header file.
//
// Generated by SIP v2.5 on Thu Aug 23 07:14:16 2001

#ifndef _BALLAmberStretch_h
#define	_BALLAmberStretch_h


#include "sipBALLForceFieldComponent.h"
#include "sipBALLForceField.h"

#line 7 "amberStretch.sip"
	#include <BALL/MOLMEC/AMBER/amberStretch.h>
	using namespace BALL;
#line 16 "sipBALLAmberStretch.h"

extern SIP_EXPORT PyObject *sipClass_AmberStretch;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_AmberStretch[];

extern "C" SIP_EXPORT const void *sipCast_AmberStretch Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_AmberStretch Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipAmberStretch : public AmberStretch
{
public:
	sipAmberStretch();
	sipAmberStretch(ForceField&);
	sipAmberStretch(const AmberStretch&,bool);
	sipAmberStretch(const AmberStretch&);
	~sipAmberStretch();
	double getEnergy() const;
	void updateForces();
	double updateEnergy();
	bool setup();

	sipThisType *sipPyThis;

private:
	sipAmberStretch(const sipAmberStretch &);
	sipAmberStretch &operator = (const sipAmberStretch &);

	sipMethodCache sipPyMethods[4];
};

extern SIP_EXPORT int sipCanConvertTo_AmberStretch Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_AmberStretch Py_PROTO((PyObject *,AmberStretch **,int,int *));
extern SIP_EXPORT AmberStretch *sipForceConvertTo_AmberStretch Py_PROTO((PyObject *,int *));

#endif
