// C++ wrapper class header file.
//
// Generated by SIP v2.4 on Wed Jul 25 07:17:27 2001

#ifndef _BALLClearRadiusProcessor_H
#define	_BALLClearRadiusProcessor_H

#include "sipBALLAtomProcessor.h"
#include "sipBALLAtom.h"

#line 20 "defaultProcessors.sip"
	#include <BALL/STRUCTURE/defaultProcessors.h>
	using namespace BALL;
#line 15 "sipBALLClearRadiusProcessor.h"

extern SIP_EXPORT PyObject *sipClass_ClearRadiusProcessor;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_ClearRadiusProcessor[];

extern SIP_EXPORT const void *sipCast_ClearRadiusProcessor Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_ClearRadiusProcessor Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipClearRadiusProcessor : public ClearRadiusProcessor
{
public:
	sipClearRadiusProcessor();
	sipClearRadiusProcessor(const ClearRadiusProcessor&);
	~sipClearRadiusProcessor();
	Processor::Result operator ()(Atom&);

	sipThisType *sipPyThis;

private:
	sipClearRadiusProcessor(const sipClearRadiusProcessor &);
	sipClearRadiusProcessor &operator = (const sipClearRadiusProcessor &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_ClearRadiusProcessor Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_ClearRadiusProcessor Py_PROTO((PyObject *,ClearRadiusProcessor **,int,int *));
extern SIP_EXPORT ClearRadiusProcessor *sipForceConvertTo_ClearRadiusProcessor Py_PROTO((PyObject *,int *));

#endif
