// C++ wrapper class header file.
//
// Generated by SIP v0.12 on Tue Jan 23 19:05:43 2001

#ifndef _BALLFloatRegularData2D_H
#define	_BALLFloatRegularData2D_H


#line 6 "regularData2D.sip"
	#include <BALL/DATATYPE/regularData2D.h>
	typedef BALL::RegularData2D<float> FloatRegularData2D;
#line 13 "../CPP/sipBALLFloatRegularData2D.h"

extern SIP_EXPORT PyObject *sipClass_FloatRegularData2D;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_FloatRegularData2D[];

extern SIP_EXPORT const void *sipCast_FloatRegularData2D Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_FloatRegularData2D Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipFloatRegularData2D : public FloatRegularData2D
{
public:
	sipFloatRegularData2D();
	sipFloatRegularData2D(const FloatRegularData2D&);
	~sipFloatRegularData2D();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	void clear();
	void destroy();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);
	static void sipVH_destroy(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[2];
};

extern SIP_EXPORT int sipCanConvertTo_FloatRegularData2D Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_FloatRegularData2D Py_PROTO((PyObject *,FloatRegularData2D **,int,int *));
extern SIP_EXPORT FloatRegularData2D *sipForceConvertTo_FloatRegularData2D Py_PROTO((PyObject *,int *));

#endif
