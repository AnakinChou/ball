// C++ interface header file.
//
// Generated by SIP v2.5pre4 on Sun Jul 29 13:00:58 2001

#ifndef _BALLFloatRegularData2D_h
#define	_BALLFloatRegularData2D_h


#include "sipBALLOutOfMemory.h"
#include "sipBALLOutOfGrid.h"
#include "sipBALLVector2.h"
#include "sipBALLGridIndex2D.h"
#include "sipBALLPosition.h"

#line 21 "regularData2D.sip"
	#include <BALL/DATATYPE/regularData2D.h>
	#include "sipBALLOutOfMemory.h"
	#include "sipBALLOutOfGrid.h"
	typedef BALL::RegularData2D<float> FloatRegularData2D;
	typedef BALL::RegularData2D<float>::GridIndex GridIndex2D;
	using namespace BALL::Exception;
#line 23 "sipBALLFloatRegularData2D.h"

extern SIP_EXPORT PyObject *sipClass_FloatRegularData2D;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_FloatRegularData2D[];

extern SIP_EXPORT const void *sipCast_FloatRegularData2D Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_FloatRegularData2D Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipFloatRegularData2D : public FloatRegularData2D
{
public:
	sipFloatRegularData2D() throw();
	sipFloatRegularData2D(const FloatRegularData2D&) throw(OutOfMemory);
	sipFloatRegularData2D(float,float,float,float,int,int) throw(OutOfMemory);
	sipFloatRegularData2D(const Vector2&,const Vector2&,int,int) throw(OutOfMemory);
	sipFloatRegularData2D(const Vector2&,const Vector2&,float) throw(OutOfMemory);
	~sipFloatRegularData2D() throw();
	void clear() throw();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipFloatRegularData2D(const sipFloatRegularData2D &);
	sipFloatRegularData2D &operator = (const sipFloatRegularData2D &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_FloatRegularData2D Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_FloatRegularData2D Py_PROTO((PyObject *,FloatRegularData2D **,int,int *));
extern SIP_EXPORT FloatRegularData2D *sipForceConvertTo_FloatRegularData2D Py_PROTO((PyObject *,int *));

#endif
