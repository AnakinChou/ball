// C++ interface header file.
//
// Generated by SIP v2.5pre4cvs on Mon Aug 20 19:50:41 2001

#ifndef _BALLRegularData2D_h
#define	_BALLRegularData2D_h


#include "sipBALLOutOfMemory.h"
#include "sipBALLOutOfGrid.h"
#include "sipBALLVector2.h"
#include "sipBALLRegularData2DGridIndex.h"
#include "sipBALLPosition.h"

#line 8 "regularData2D.sip"
	#include <BALL/DATATYPE/regularData2D.h>
	#include "sipBALLOutOfMemory.h"
	#include "sipBALLOutOfGrid.h"
	using namespace BALL;
	using namespace BALL::Exception;
#line 22 "sipBALLRegularData2D.h"

extern SIP_EXPORT PyObject *sipClass_RegularData2D;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_RegularData2D[];

extern "C" SIP_EXPORT const void *sipCast_RegularData2D Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_RegularData2D Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipRegularData2D : public RegularData2D
{
public:
	sipRegularData2D() throw();
	sipRegularData2D(const RegularData2D&) throw(OutOfMemory);
	sipRegularData2D(float,float,float,float,int,int) throw(OutOfMemory);
	sipRegularData2D(const Vector2&,const Vector2&,int,int) throw(OutOfMemory);
	sipRegularData2D(const Vector2&,const Vector2&,float) throw(OutOfMemory);
	~sipRegularData2D() throw();
	void clear() throw();
	static void sipVH_clear(const sipMethodCache *,sipThisType *,int);

	sipThisType *sipPyThis;

private:
	sipRegularData2D(const sipRegularData2D &);
	sipRegularData2D &operator = (const sipRegularData2D &);

	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_RegularData2D Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_RegularData2D Py_PROTO((PyObject *,RegularData2D **,int,int *));
extern SIP_EXPORT RegularData2D *sipForceConvertTo_RegularData2D Py_PROTO((PyObject *,int *));

#endif
