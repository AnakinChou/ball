// C++ interface header file.
//
// Generated by SIP v2.5pre4 on Sun Jul 29 13:00:58 2001

#ifndef _BALLCharmmStretch_h
#define	_BALLCharmmStretch_h


#include "sipBALLForceFieldComponent.h"
#include "sipBALLForceField.h"

#line 7 "charmmStretch.sip"
	#include <BALL/MOLMEC/CHARMM/charmmStretch.h>
	using namespace BALL;
#line 16 "sipBALLCharmmStretch.h"

extern SIP_EXPORT PyObject *sipClass_CharmmStretch;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_CharmmStretch[];

extern SIP_EXPORT const void *sipCast_CharmmStretch Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_CharmmStretch Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipCharmmStretch : public CharmmStretch
{
public:
	sipCharmmStretch();
	sipCharmmStretch(ForceField&);
	sipCharmmStretch(const CharmmStretch&,bool);
	sipCharmmStretch(const CharmmStretch&);
	~sipCharmmStretch();
	double getEnergy() const;
	void updateForces();
	double updateEnergy();
	bool setup();

	sipThisType *sipPyThis;

private:
	sipCharmmStretch(const sipCharmmStretch &);
	sipCharmmStretch &operator = (const sipCharmmStretch &);

	sipMethodCache sipPyMethods[4];
};

extern SIP_EXPORT int sipCanConvertTo_CharmmStretch Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_CharmmStretch Py_PROTO((PyObject *,CharmmStretch **,int,int *));
extern SIP_EXPORT CharmmStretch *sipForceConvertTo_CharmmStretch Py_PROTO((PyObject *,int *));

#endif
