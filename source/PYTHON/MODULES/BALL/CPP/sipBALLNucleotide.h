// C++ interface header file.
//
// Generated by SIP v2.5pre4cvs on Mon Aug 20 19:50:40 2001

#ifndef _BALLNucleotide_h
#define	_BALLNucleotide_h


#include "sipBALLFragment.h"
#include "sipBALLString.h"
#include "sipBALLNucleicAcid.h"
#include "sipBALLAtom.h"
#include "sipBALLComposite.h"

#line 6 "nucleotide.sip"
#include <BALL/KERNEL/fragment.h>
using namespace BALL;
#line 19 "sipBALLNucleotide.h"

extern SIP_EXPORT PyObject *sipClass_Nucleotide;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Nucleotide[];

extern "C" SIP_EXPORT const void *sipCast_Nucleotide Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_Nucleotide Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipNucleotide : public Nucleotide
{
public:
	sipNucleotide();
	sipNucleotide(const Nucleotide&,bool);
	sipNucleotide(const String&,const String&,char);
	sipNucleotide(const Nucleotide&);
	~sipNucleotide() throw();
	void deselect() throw();
	void select() throw();
	bool isValid() const throw();
	void destroy() throw();
	void clear() throw();

	sipThisType *sipPyThis;

private:
	sipNucleotide(const sipNucleotide &);
	sipNucleotide &operator = (const sipNucleotide &);

	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_Nucleotide Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Nucleotide Py_PROTO((PyObject *,Nucleotide **,int,int *));
extern SIP_EXPORT Nucleotide *sipForceConvertTo_Nucleotide Py_PROTO((PyObject *,int *));

#endif
