// C++ interface header file.
//
// Generated by SIP v2.5 on Thu Aug 23 21:25:05 2001

#ifndef _BALLBond_h
#define	_BALLBond_h


#include "sipBALLComposite.h"
#include "sipBALLPropertyManager.h"
#include "sipBALLString.h"
#include "sipBALLAtom.h"
#include "sipBALLAtomContainer.h"
#include "sipBALLSystem.h"

#line 8 "bond.sip"
	#include <BALL/KERNEL/bond.h>
	#include <BALL/KERNEL/atom.h>
	using namespace BALL;
#line 21 "sipBALLBond.h"

extern SIP_EXPORT PyObject *sipClass_Bond;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_Bond[];

extern "C" SIP_EXPORT const void *sipCast_Bond Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_Bond Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipBond : public Bond
{
public:
	sipBond();
	sipBond(const Bond&,bool);
	sipBond(const String&,Atom&,Atom&,short,short);
	sipBond(const Bond&);
	~sipBond() throw();
	void deselect() throw();
	void select() throw();
	bool isValid() const throw();
	void destroy() throw();
	void clear() throw();

	sipThisType *sipPyThis;

private:
	sipBond(const sipBond &);
	sipBond &operator = (const sipBond &);

	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_Bond Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_Bond Py_PROTO((PyObject *,Bond **,int,int *));
extern SIP_EXPORT Bond *sipForceConvertTo_Bond Py_PROTO((PyObject *,int *));

#endif
