// C++ interface header file.
//
// Generated by SIP v2.5pre4cvs on Wed Aug 15 16:06:15 2001

#ifndef _BALLDCDFile_h
#define	_BALLDCDFile_h


#include "sipBALLTrajectoryFile.h"
#include "sipBALLFileNotFound.h"
#include "sipBALLString.h"
#include "sipBALLstd__openmode.h"
#include "sipBALLSnapShot.h"
#include "sipBALLDCDHeader.h"

#line 37 "DCDFile.sip"
	#include <BALL/FORMAT/DCDFile.h>
	using namespace BALL;
	using namespace BALL::Exception;
#line 21 "sipBALLDCDFile.h"

extern SIP_EXPORT PyObject *sipClass_DCDFile;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_DCDFile[];

extern "C" SIP_EXPORT const void *sipCast_DCDFile Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_DCDFile Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipDCDFile : public DCDFile
{
public:
	sipDCDFile() throw();
	sipDCDFile(const DCDFile&) throw(FileNotFound);
	sipDCDFile(const String&,std__openmode) throw();
	~sipDCDFile() throw();
	bool read(SnapShot&) throw();
	bool append(const SnapShot&) throw();
	bool writeHeader() throw();
	bool readHeader() throw();
	void clear() throw();

	sipThisType *sipPyThis;

private:
	sipDCDFile(const sipDCDFile &);
	sipDCDFile &operator = (const sipDCDFile &);

	sipMethodCache sipPyMethods[5];
};

extern SIP_EXPORT int sipCanConvertTo_DCDFile Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_DCDFile Py_PROTO((PyObject *,DCDFile **,int,int *));
extern SIP_EXPORT DCDFile *sipForceConvertTo_DCDFile Py_PROTO((PyObject *,int *));

#endif
