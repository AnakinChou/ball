// C++ interface header file.
//
// Generated by SIP v2.5pre4cvs on Wed Aug 15 16:06:15 2001

#ifndef _BALLPDBFile_h
#define	_BALLPDBFile_h


#include "sipBALLGenericPDBFile.h"
#include "sipBALLFileNotFound.h"
#include "sipBALLString.h"
#include "sipBALLstd__openmode.h"
#include "sipBALLProtein.h"
#include "sipBALLSystem.h"

#line 7 "PDBFile.sip"
	#include <BALL/FORMAT/PDBFile.h>
	using namespace BALL;
#line 20 "sipBALLPDBFile.h"

extern SIP_EXPORT PyObject *sipClass_PDBFile;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_PDBFile[];

extern "C" SIP_EXPORT const void *sipCast_PDBFile Py_PROTO((const void *,PyObject *));
extern "C" SIP_EXPORT PyObject *sipNew_PDBFile Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipPDBFile : public PDBFile
{
public:
	sipPDBFile();
	sipPDBFile(const String&,std__openmode) throw(FileNotFound);
	sipPDBFile(const PDBFile&);
	~sipPDBFile() throw();
	float getVersion() const;
	void clear(int);
	void operator<<(const System&);
	static void sipVH_LShiftOp(const sipMethodCache *,sipThisType *,int,const System&);
	void operator<<(const Protein&);
	static void sipVH_LShiftOp(const sipMethodCache *,sipThisType *,int,const Protein&);
	void operator>>(System&);
	static void sipVH_RShiftOp(const sipMethodCache *,sipThisType *,int,System&);
	void operator>>(Protein&);
	static void sipVH_RShiftOp(const sipMethodCache *,sipThisType *,int,Protein&);
	void write(const System&);
	static void sipVH_write(const sipMethodCache *,sipThisType *,int,const System&);
	void write(const Protein&);
	static void sipVH_write(const sipMethodCache *,sipThisType *,int,const Protein&);
	void read(System&);
	static void sipVH_read(const sipMethodCache *,sipThisType *,int,System&);
	void read(Protein&);
	static void sipVH_read(const sipMethodCache *,sipThisType *,int,Protein&);

	sipThisType *sipPyThis;

private:
	sipPDBFile(const sipPDBFile &);
	sipPDBFile &operator = (const sipPDBFile &);

	sipMethodCache sipPyMethods[10];
};

extern SIP_EXPORT int sipCanConvertTo_PDBFile Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_PDBFile Py_PROTO((PyObject *,PDBFile **,int,int *));
extern SIP_EXPORT PDBFile *sipForceConvertTo_PDBFile Py_PROTO((PyObject *,int *));

#endif
