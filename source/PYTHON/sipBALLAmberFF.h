// C++ wrapper class header file.
//
// Generated by SIP v0.11.1 on Wed May  3 23:13:53 2000

#ifndef _BALLAmberFF_H
#define	_BALLAmberFF_H

#include "sipBALLForceField.h"
#include "sipBALLSystem.h"
#include "sipBALLOptions.h"

#line 5 "amber.sip"
#include <BALL/MOLMEC/AMBER/amber.h>
using namespace BALL;
#line 16 "./sipBALLAmberFF.h"

extern SIP_EXPORT PyObject *sipClass_AmberFF;
extern SIP_EXPORT PyMethodDef sipClassAttrTab_AmberFF[];

extern SIP_EXPORT const void *sipCast_AmberFF Py_PROTO((const void *,PyObject *));
extern SIP_EXPORT PyObject *sipNew_AmberFF Py_PROTO((PyObject *,PyObject *));


class SIP_EXPORT sipAmberFF : public AmberFF
{
public:
	sipAmberFF();
	sipAmberFF(System&);
	sipAmberFF(System&,Options&);
	sipAmberFF(AmberFF&,bool);
	sipAmberFF(const AmberFF&);
	~sipAmberFF();

       // There is a catcher function for every virtual member function in
       // the class hierachy.

	bool specificSetup();

	sipThisType *sipPyThis;

private:
	sipMethodCache sipPyMethods[1];
};

extern SIP_EXPORT int sipCanConvertTo_AmberFF Py_PROTO((PyObject *));
extern SIP_EXPORT void sipConvertTo_AmberFF Py_PROTO((PyObject *,AmberFF **,int *));
extern SIP_EXPORT AmberFF *sipForceConvertTo_AmberFF Py_PROTO((PyObject *,int *));

#endif
