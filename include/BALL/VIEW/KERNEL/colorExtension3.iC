// -*- Mode: C++; tab-width: 2; -*-
// vi: set ts=2:
//
// $Id: colorExtension3.iC,v 1.3.2.1 2003/01/07 13:19:47 anker Exp $

BALL_INLINE
void ColorExtension3::setColor3
  (const ColorRGBA&color)
	throw()
{
  color3_ = color;
}

BALL_INLINE
void ColorExtension3::setColor3
  (const ColorUnit& red,
   const ColorUnit& green,
   const ColorUnit& blue,
   const ColorUnit& alpha)
	throw()
{
  color3_.set(red, green, blue, alpha);
}

BALL_INLINE
ColorRGBA& ColorExtension3::getColor3()
	throw()
{
  return color3_;
}

BALL_INLINE
const ColorRGBA& 
ColorExtension3::getColor3() const
	throw()
{
  return color3_;
}

BALL_INLINE
void ColorExtension3::getColor3(ColorRGBA&color) const
	throw()
{
 color = color3_;
}

BALL_INLINE
void ColorExtension3::getColor3
  (ColorUnit& red, ColorUnit& green,
   ColorUnit& blue, ColorUnit& alpha) const
	throw()
{
  color3_.get(red, green, blue, alpha);
}

BALL_INLINE
void ColorExtension3::getColor3
  (ColorUnit& red, ColorUnit& green, ColorUnit& blue) const
	throw()
{
  color3_.get(red, green, blue);
}

BALL_INLINE
void 
ColorExtension3::setColors
  (const ColorRGBA& a,
   const ColorRGBA& b,
   const ColorRGBA& c)
	throw()
{
  ColorExtension2::setColors(a, b);

  color3_ = c;
}
      
BALL_INLINE
void ColorExtension3::getColors
  (ColorRGBA& a,
   ColorRGBA& b,
   ColorRGBA& c) const
	throw()
{
  ColorExtension2::getColors(a, b);

  c = color3_;
}

