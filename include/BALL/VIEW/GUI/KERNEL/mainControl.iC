// $Id: mainControl.iC,v 1.3 2000/09/23 14:18:21 hekl Exp $

BALL_INLINE 
CompositeDescriptor* MainControl::insert
  (const Composite& composite, const String& name, const Vector3& center)
{
	NewCompositeMessage message;
	message.setComposite(composite);
	notify_(message);
  return insert_(composite, name, center);
}

BALL_INLINE 
CompositeDescriptor* MainControl::insert
  (CompositeDescriptor& composite_descriptor, bool deep)
{
  return insert_(composite_descriptor, deep);
}

BALL_INLINE 
CompositeDescriptor* MainControl::getDescriptor
  (const Composite& composite)
{
	ListIteratorHashMap::ConstIterator it = composite_map_.find((void*)&composite);
  if (it != composite_map_.end())
	{
		return *it->second;
	}	

	return 0;
}
    
BALL_INLINE 
const CompositeDescriptor* MainControl::getDescriptor
  (const Composite& composite) const
{
	ListIteratorHashMap::ConstIterator it = composite_map_.find((void*)&composite);
  if (it != composite_map_.end())
	{
		return *it->second;
	}	

	return 0;
}
    
BALL_INLINE 
List<CompositeDescriptor*>& MainControl::getDescriptorList()
{
  return descriptors_;
}

BALL_INLINE 
const List<CompositeDescriptor*>& MainControl::getDescriptorList() const
{
  return descriptors_;
}
  
BALL_INLINE 
const String* MainControl::getName
  (const Composite& composite) const
{
  return ((MainControl*)this)->getName(composite);
}

BALL_INLINE 
const CompositeDescriptor* MainControl::getDescriptor
  (const String& name) const
{
  return (CompositeDescriptor*)this->getDescriptor(name);
}

BALL_INLINE 
const Vector3* MainControl::getCenter
  (const Composite& composite) const
{
  return ((MainControl*)this)->getCenter(composite);
}

BALL_INLINE 
const CompositeDescriptor* MainControl::getDescriptor
  (const Vector3& center) const
{
  return (CompositeDescriptor *)this->getDescriptor(center);
}



