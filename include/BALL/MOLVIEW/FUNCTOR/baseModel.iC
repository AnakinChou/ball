// $Id: baseModel.iC,v 1.6 2000/06/25 19:13:52 hekl Exp $

BALL_INLINE
void BaseModelProcessor::enableStaticModel()
{
  setProperty(GeometricObject::PROPERTY__OBJECT_STATIC);
}

BALL_INLINE
void BaseModelProcessor::disableStaticModel()
{
  setProperty(GeometricObject::PROPERTY__OBJECT_DYNAMIC);
}

BALL_INLINE
void BaseModelProcessor::enableDynamicModel()
{
  setProperty(GeometricObject::PROPERTY__OBJECT_DYNAMIC);
}

BALL_INLINE
void BaseModelProcessor::disableDynamicModel()
{
  setProperty(GeometricObject::PROPERTY__OBJECT_STATIC);
}

BALL_INLINE
void BaseModelProcessor::registerColorCalculator
  (const ColorCalculator& color_calculator)
{
  color_calculator_  = const_cast<ColorCalculator*>(&color_calculator);
}
  
BALL_INLINE
void BaseModelProcessor::unregisterColorCalculator()
{
  color_calculator_ = const_cast<ColorCalculator*>((ColorCalculator*)&RTTI::getDefault<ColorCalculator>());
}
  
BALL_INLINE
ColorCalculator* BaseModelProcessor::getColorCalculator() const
{
  return color_calculator_;
}

BALL_INLINE
void BaseModelProcessor::registerModelConnector
  (const BaseModelConnector& model_connector)
{
  model_connector_  = const_cast<BaseModelConnector*>(&model_connector);
}
  
BALL_INLINE
void BaseModelProcessor::unregisterModelConnector()
{
	model_connector_ = const_cast<BaseModelConnector*>((BaseModelConnector*)&RTTI::getDefault<BaseModelConnector>());
}

BALL_INLINE
BaseModelConnector* BaseModelProcessor::getModelConnector()
{
  return model_connector_;
}

BALL_INLINE
bool BaseModelProcessor::isStaticModelEnabled()
{
  return (bool)(hasProperty(GeometricObject::PROPERTY__OBJECT_STATIC) == true);
}

BALL_INLINE
bool BaseModelProcessor::isStaticModelDisabled()
{
  return (bool)(hasProperty(GeometricObject::PROPERTY__OBJECT_STATIC) == false);
}

BALL_INLINE
bool BaseModelProcessor::isDynamicModelEnabled()
{
  return (bool)(hasProperty(GeometricObject::PROPERTY__OBJECT_DYNAMIC) == true);
}

BALL_INLINE
bool BaseModelProcessor::isDynamicModelDisabled()
{
  return (bool)(hasProperty(GeometricObject::PROPERTY__OBJECT_DYNAMIC) == false);
}

BALL_INLINE
bool BaseModelProcessor::isDefaultColorCalculatorRegistered()
{
  return (bool)(color_calculator_ == const_cast<ColorCalculator*>((ColorCalculator*)&RTTI::getDefault<ColorCalculator>()));
}

BALL_INLINE
FindGeometricObjects& BaseModelProcessor::getSearcher_()
{
  return find_geometric_object_;
}
