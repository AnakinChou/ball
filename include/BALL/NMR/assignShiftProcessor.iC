// -*- Mode: C++; tab-width: 2; -*-
// vi: set ts=2:
//
// $Id: assignShiftProcessor.iC,v 1.15 2004/05/27 19:49:44 oliver Exp $
//

BALL_INLINE
AssignShiftProcessor::AssignShiftProcessor(const vector<NMRStarFile::NMRAtomData>& atom_data)
	:	atom_data_(atom_data),
		molecule_(0),
		fragment_db_("")
{
	if (atom_data.size() == 0)
	{
		Log.error() << "AssignShiftProcessor: given vector contains no shift data " << ::std::endl;
	}
}
BALL_INLINE
AssignShiftProcessor::~AssignShiftProcessor()
{
}

BALL_INLINE
bool AssignShiftProcessor::isValid() const
{
	//TODO vielleicht besser fragment_db_.isValid()
	return ((atom_data_.size() > 0) && fragment_db_.isValid());
}

BALL_INLINE
void AssignShiftProcessor::setFragmentDB(const FragmentDB& db) 
{
	fragment_db_ = db;
}

BALL_INLINE
const FragmentDB& AssignShiftProcessor::getFragmentDB()
{
	return fragment_db_;
}

